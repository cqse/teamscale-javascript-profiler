{"version":3,"sources":["webpack:///$_lazy_route_resources|lazy|groupOptions: {}|namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/dashboard/dashboard.component.html","webpack:///src/app/dashboard/dashboard.component.ts","webpack:///src/app/hero-detail/hero-detail.component.html","webpack:///src/app/hero-detail/hero-detail.component.ts","webpack:///src/app/hero-search/hero-search.component.html","webpack:///src/app/hero-search/hero-search.component.ts","webpack:///src/app/hero.service.ts","webpack:///src/app/heroes/heroes.component.html","webpack:///src/app/heroes/heroes.component.ts","webpack:///src/app/in-memory-data.service.ts","webpack:///src/app/message.service.ts","webpack:///src/app/messages/messages.component.html","webpack:///src/app/messages/messages.component.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","id","module","exports","routes","path","redirectTo","pathMatch","component","DashboardComponent","HeroDetailComponent","HeroesComponent","AppRoutingModule","RouterModule","AppComponent","title","AppModule","BrowserModule","FormsModule","HttpClientModule","HttpClientInMemoryWebApiModule","InMemoryDataService","dataEncapsulation","MessagesComponent","HeroSearchComponent","heroService","heroes","getHeroes","subscribe","slice","route","location","getHero","parseInt","snapshot","paramMap","get","hero","back","updateHero","goBack","searchTerms","Subject","term","next","heroes$","pipe","debounceTime","distinctUntilChanged","switchMap","searchHeroes","search","HeroService","http","messageService","heroesUrl","httpOptions","headers","HttpHeaders","tap","_","log","catchError","handleError","url","map","h","outcome","trim","of","x","length","post","newHero","put","operation","result","error","console","message","add","name","addHero","push","filter","deleteHero","Math","max","MessageService","messages","environment","production","enableProdMode","platformBrowser","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 8255;\nmodule.exports = webpackEmptyAsyncContext;","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { HeroesComponent } from './heroes/heroes.component';\nimport { HeroDetailComponent } from './hero-detail/hero-detail.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/dashboard', pathMatch: 'full' },\n  { path: 'dashboard', component: DashboardComponent },\n  { path: 'detail/:id', component: HeroDetailComponent },\n  { path: 'heroes', component: HeroesComponent }\n];\n\n@NgModule({\n  imports: [ RouterModule.forRoot(routes) ],\n  exports: [ RouterModule ]\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Tour of Heroes';\n}\n","<h1>{{title}}</h1>\n<nav>\n  <a routerLink=\"/dashboard\">Dashboard</a>\n  <a routerLink=\"/heroes\">Heroes</a>\n</nav>\n<router-outlet></router-outlet>\n<app-messages></app-messages>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { HttpClientInMemoryWebApiModule } from 'angular-in-memory-web-api';\nimport { InMemoryDataService } from './in-memory-data.service';\n\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { AppComponent } from './app.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { HeroDetailComponent } from './hero-detail/hero-detail.component';\nimport { HeroesComponent } from './heroes/heroes.component';\nimport { HeroSearchComponent } from './hero-search/hero-search.component';\nimport { MessagesComponent } from './messages/messages.component';\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    FormsModule,\n    AppRoutingModule,\n    HttpClientModule,\n\n    // The HttpClientInMemoryWebApiModule module intercepts HTTP requests\n    // and returns simulated server responses.\n    // Remove it when a real server is ready to receive requests.\n    HttpClientInMemoryWebApiModule.forRoot(\n      InMemoryDataService, { dataEncapsulation: false }\n    )\n  ],\n  declarations: [\n    AppComponent,\n    DashboardComponent,\n    HeroesComponent,\n    HeroDetailComponent,\n    MessagesComponent,\n    HeroSearchComponent\n  ],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule { }\n","<h2>Top Heroes</h2>\n<div class=\"heroes-menu\">\n  <a *ngFor=\"let hero of heroes\"\n      routerLink=\"/detail/{{hero.id}}\">\n      {{hero.name}}\n  </a>\n</div>\n\n<app-hero-search></app-hero-search>\n","import { Component, OnInit } from '@angular/core';\nimport { Hero } from '../hero';\nimport { HeroService } from '../hero.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: [ './dashboard.component.css' ]\n})\nexport class DashboardComponent implements OnInit {\n  heroes: Hero[] = [];\n\n  constructor(private heroService: HeroService) { }\n\n  ngOnInit() {\n    this.getHeroes();\n  }\n\n  getHeroes(): void {\n    this.heroService.getHeroes()\n      .subscribe(heroes => this.heroes = heroes.slice(1, 5));\n  }\n}\n","<div *ngIf=\"hero\">\n  <h2>{{hero.name | uppercase}} Details</h2>\n  <div><span>id: </span>{{hero.id}}</div>\n  <div>\n    <label for=\"hero-name\">Hero name: </label>\n    <input id=\"hero-name\" [(ngModel)]=\"hero.name\" placeholder=\"Hero name\"/>\n  </div>\n  <button (click)=\"goBack()\">go back</button>\n  <button (click)=\"save()\">save</button>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Location } from '@angular/common';\n\nimport { Hero } from '../hero';\nimport { HeroService } from '../hero.service';\n\n@Component({\n  selector: 'app-hero-detail',\n  templateUrl: './hero-detail.component.html',\n  styleUrls: [ './hero-detail.component.css' ]\n})\nexport class HeroDetailComponent implements OnInit {\n  hero: Hero | undefined;\n\n  constructor(\n    private route: ActivatedRoute,\n    private heroService: HeroService,\n    private location: Location\n  ) {}\n\n  ngOnInit(): void {\n    this.getHero();\n  }\n\n  getHero(): void {\n    const id = parseInt(this.route.snapshot.paramMap.get('id')!, 10);\n    this.heroService.getHero(id)\n      .subscribe(hero => this.hero = hero);\n  }\n\n  goBack(): void {\n    this.location.back();\n  }\n\n  save(): void {\n    if (this.hero) {\n      this.heroService.updateHero(this.hero)\n        .subscribe(() => this.goBack());\n    }\n  }\n}\n","<div id=\"search-component\">\n  <label for=\"search-box\">Hero Search</label>\n  <input #searchBox id=\"search-box\" (input)=\"search(searchBox.value)\" />\n\n  <ul class=\"search-result\">\n    <li *ngFor=\"let hero of heroes$ | async\" >\n      <a routerLink=\"/detail/{{hero.id}}\">\n        {{hero.name}}\n      </a>\n    </li>\n  </ul>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\nimport { Observable, Subject } from 'rxjs';\n\nimport {\n   debounceTime, distinctUntilChanged, switchMap\n } from 'rxjs/operators';\n\nimport { Hero } from '../hero';\nimport { HeroService } from '../hero.service';\n\n@Component({\n  selector: 'app-hero-search',\n  templateUrl: './hero-search.component.html',\n  styleUrls: [ './hero-search.component.css' ]\n})\nexport class HeroSearchComponent implements OnInit {\n  heroes$!: Observable<Hero[]>;\n  private searchTerms = new Subject<string>();\n\n  constructor(private heroService: HeroService) {}\n\n  // Push a search term into the observable stream.\n  search(term: string): void {\n    this.searchTerms.next(term);\n  }\n\n  ngOnInit(): void {\n    this.heroes$ = this.searchTerms.pipe(\n      // wait 300ms after each keystroke before considering the term\n      debounceTime(300),\n\n      // ignore new term if same as previous term\n      distinctUntilChanged(),\n\n      // switch to new search observable each time the term changes\n      switchMap((term: string) => this.heroService.searchHeroes(term)),\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\n\nimport { Hero } from './hero';\nimport { MessageService } from './message.service';\n\n\n@Injectable({ providedIn: 'root' })\nexport class HeroService {\n\n  private heroesUrl = 'api/heroes';  // URL to web api\n\n  httpOptions = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n  };\n\n  constructor(\n    private http: HttpClient,\n    private messageService: MessageService) { }\n\n  /** GET heroes from the server */\n  getHeroes(): Observable<Hero[]> {\n    return this.http.get<Hero[]>(this.heroesUrl)\n      .pipe(\n        tap(_ => this.log('fetched heroes')),\n        catchError(this.handleError<Hero[]>('getHeroes', []))\n      );\n  }\n\n  /** GET hero by id. Return `undefined` when id not found */\n  getHeroNo404<Data>(id: number): Observable<Hero> {\n    const url = `${this.heroesUrl}/?id=${id}`;\n    return this.http.get<Hero[]>(url)\n      .pipe(\n        map(heroes => heroes[0]), // returns a {0|1} element array\n        tap(h => {\n          const outcome = h ? `fetched` : `did not find`;\n          this.log(`${outcome} hero id=${id}`);\n        }),\n        catchError(this.handleError<Hero>(`getHero id=${id}`))\n      );\n  }\n\n  /** GET hero by id. Will 404 if id not found */\n  getHero(id: number): Observable<Hero> {\n    const url = `${this.heroesUrl}/${id}`;\n    return this.http.get<Hero>(url).pipe(\n      tap(_ => this.log(`fetched hero id=${id}`)),\n      catchError(this.handleError<Hero>(`getHero id=${id}`))\n    );\n  }\n\n  /* GET heroes whose name contains search term */\n  searchHeroes(term: string): Observable<Hero[]> {\n    if (!term.trim()) {\n      // if not search term, return empty hero array.\n      return of([]);\n    }\n    return this.http.get<Hero[]>(`${this.heroesUrl}/?name=${term}`).pipe(\n      tap(x => x.length ?\n         this.log(`found heroes matching \"${term}\"`) :\n         this.log(`no heroes matching \"${term}\"`)),\n      catchError(this.handleError<Hero[]>('searchHeroes', []))\n    );\n  }\n\n  //////// Save methods //////////\n\n  /** POST: add a new hero to the server */\n  addHero(hero: Hero): Observable<Hero> {\n    return this.http.post<Hero>(this.heroesUrl, hero, this.httpOptions).pipe(\n      tap((newHero: Hero) => this.log(`added hero w/ id=${newHero.id}`)),\n      catchError(this.handleError<Hero>('addHero'))\n    );\n  }\n\n  /** DELETE: delete the hero from the server */\n  deleteHero(id: number): Observable<Hero> {\n    const url = `${this.heroesUrl}/${id}`;\n\n    return this.http.delete<Hero>(url, this.httpOptions).pipe(\n      tap(_ => this.log(`deleted hero id=${id}`)),\n      catchError(this.handleError<Hero>('deleteHero'))\n    );\n  }\n\n  /** PUT: update the hero on the server */\n  updateHero(hero: Hero): Observable<any> {\n    return this.http.put(this.heroesUrl, hero, this.httpOptions).pipe(\n      tap(_ => this.log(`updated hero id=${hero.id}`)),\n      catchError(this.handleError<any>('updateHero'))\n    );\n  }\n\n  /**\n   * Handle Http operation that failed.\n   * Let the app continue.\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   */\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      // TODO: better job of transforming error for user consumption\n      this.log(`${operation} failed: ${error.message}`);\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n\n  /** Log a HeroService message with the MessageService */\n  private log(message: string) {\n    this.messageService.add(`HeroService: ${message}`);\n  }\n}\n","<h2>My Heroes</h2>\n\n<div>\n  <label for=\"new-hero\">Hero name: </label>\n  <input id=\"new-hero\" #heroName />\n\n  <!-- (click) passes input value to add() and then clears the input -->\n  <button class=\"add-button\" (click)=\"add(heroName.value); heroName.value=''\">\n    Add hero\n  </button>\n</div>\n\n<ul class=\"heroes\">\n  <li *ngFor=\"let hero of heroes\">\n    <a routerLink=\"/detail/{{hero.id}}\">\n      <span class=\"badge\">{{hero.id}}</span> {{hero.name}}\n    </a>\n    <button class=\"delete\" title=\"delete hero\"\n      (click)=\"delete(hero)\">x</button>\n  </li>\n</ul>\n","import { Component, OnInit } from '@angular/core';\n\nimport { Hero } from '../hero';\nimport { HeroService } from '../hero.service';\n\n@Component({\n  selector: 'app-heroes',\n  templateUrl: './heroes.component.html',\n  styleUrls: ['./heroes.component.css']\n})\nexport class HeroesComponent implements OnInit {\n  heroes: Hero[] = [];\n\n  constructor(private heroService: HeroService) { }\n\n  ngOnInit() {\n    this.getHeroes();\n  }\n\n  getHeroes(): void {\n    this.heroService.getHeroes()\n    .subscribe(heroes => this.heroes = heroes);\n  }\n\n  add(name: string): void {\n    name = name.trim();\n    if (!name) { return; }\n    this.heroService.addHero({ name } as Hero)\n      .subscribe(hero => {\n        this.heroes.push(hero);\n      });\n  }\n\n  delete(hero: Hero): void {\n    this.heroes = this.heroes.filter(h => h !== hero);\n    this.heroService.deleteHero(hero.id).subscribe();\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { InMemoryDbService } from 'angular-in-memory-web-api';\nimport { Hero } from './hero';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class InMemoryDataService implements InMemoryDbService {\n  createDb() {\n    const heroes = [\n      { id: 11, name: 'Dr Nice' },\n      { id: 12, name: 'Narco' },\n      { id: 13, name: 'Bombasto' },\n      { id: 14, name: 'Celeritas' },\n      { id: 15, name: 'Magneta' },\n      { id: 16, name: 'RubberMan' },\n      { id: 17, name: 'Dynama' },\n      { id: 18, name: 'Dr IQ' },\n      { id: 19, name: 'Magma' },\n      { id: 20, name: 'Tornado' }\n    ];\n    return {heroes};\n  }\n\n  // Overrides the genId method to ensure that a hero always has an id.\n  // If the heroes array is empty,\n  // the method below returns the initial number (11).\n  // if the heroes array is not empty, the method below returns the highest\n  // hero id + 1.\n  genId(heroes: Hero[]): number {\n    return heroes.length > 0 ? Math.max(...heroes.map(hero => hero.id)) + 1 : 11;\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({ providedIn: 'root' })\nexport class MessageService {\n  messages: string[] = [];\n\n  add(message: string) {\n    this.messages.push(message);\n  }\n\n  clear() {\n    this.messages = [];\n  }\n}\n","<div *ngIf=\"messageService.messages.length\">\n\n  <h2>Messages</h2>\n  <button class=\"clear\"\n          (click)=\"messageService.clear()\">Clear messages</button>\n  <div *ngFor='let message of messageService.messages'> {{message}} </div>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { MessageService } from '../message.service';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.css']\n})\nexport class MessagesComponent implements OnInit {\n\n  constructor(public messageService: MessageService) {}\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}