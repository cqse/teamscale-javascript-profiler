/** $IS_JS_PROFILER_INSTRUMENTED=true **/ (()=>{function d(e){let n=new Blob([e],{type:"text/javascript"}),t=URL.createObjectURL(n),s=new Worker(t);return URL.revokeObjectURL(t),s}function h(){return d('var r=class{constructor(e){this.cachedMessages=[];this.url=e,this.socket=this.createSocket()}createSocket(){let e=new WebSocket(this.url);return e.onopen=()=>this.onopen(),e.onclose=()=>this.onclose(),e}onclose(){this.socket=this.createSocket()}onopen(){console.log("Connection to Coverage Collector established."),this.cachedMessages.forEach(e=>this.socket.send(e)),this.cachedMessages=[]}send(e){this.socket.readyState===WebSocket.OPEN?this.socket.send(e):(this.cachedMessages.push(e),this.cachedMessages.length%500===0&&console.log(`More than ${this.cachedMessages.length} messages are queued to be sent.`))}};var C=20,m=1e3,d=class{constructor(e,t){this.milliseconds=e;this.onCountedToZero=t;this.timerHandle=null}restartCountdown(){this.stopCountdown(),this.timerHandle=self.setTimeout(()=>{this.stopCountdown(),this.onCountedToZero()},this.milliseconds)}stopCountdown(){this.timerHandle!==null&&(self.clearTimeout(this.timerHandle),this.timerHandle=null)}},a=class{constructor(e){this.socket=e,this.cachedCoveredRanges=new Map,this.numberOfCachedPositions=0,this.flushCountdown=new d(m,()=>this.flush())}addRange(e,t){if(!t.start.line||!t.end.line)return;let o=this.cachedCoveredRanges.get(e);o||(o=new Set,this.cachedCoveredRanges.set(e,o)),o.add(t),this.numberOfCachedPositions+=1,this.flushCountdown.restartCountdown(),this.numberOfCachedPositions>=C&&this.flush()}flush(){this.numberOfCachedPositions!==0&&(this.flushCountdown.stopCountdown(),this.cachedCoveredRanges.forEach((e,t)=>{let o=Array.from(e).map(n=>`${n.start.line}:${n.start.column}:${n.end.line}:${n.end.column}`);this.socket.send(`${"c"} ${t} ${o.join(" ")}`),e.clear()}),this.cachedCoveredRanges.clear(),this.numberOfCachedPositions=0)}};console.log("Starting coverage forwarding worker.");var u=new r("ws://localhost:54678/socket"),h=new a(u),f=new Map;onmessage=s=>{if(Array.isArray(s.data))p(s.data);else{let e=s.data;if(e.startsWith("s"))u.send(e);else if(e.startsWith("i")){let t=JSON.parse(e.substring(2));f.set(t.hash,t),console.info(`Received coverage mapping information for "${t.hash}".`)}else e==="unload"?h.flush():console.error(`No handler for message: ${e}`)}};function p(s){var n;let e=s[0],t=s[1],o=f.get(e);if(!o){console.log(`No coverage mapping information for ${e} available!`);return}for(let[c,i]of t.branches.entries()){let l=(n=o.branchMap[c])==null?void 0:n.locations[i];l&&h.addRange(e,l)}for(let c of t.statements){let i=o.statementMap[c];i&&h.addRange(e,i)}}\n')}function c(){return g()}function g(){return window}function p(e,n){let t=c()[e];return t||(t=n,c()[e]=t),t}var l;(function(r){r.MESSAGE_TYPE_SOURCEMAP="s",r.MESSAGE_TYPE_COVERAGE="c",r.ISTANBUL_COV_OBJECT="i",r.UNRESOLVED_CODE_ENTITY="u"})(l||(l={}));function v(e,n){let t=new Map;function s(i){let o=t.get(i);return o||(o={branches:new Map,statements:new Set},t.set(i,o),o)}function r(i,o,w){s(i).branches.set(o,w)}function u(i,o){s(i).statements.add(o)}function a(){n(t),t.clear()}return setInterval(()=>a(),e),{putBranchCoverage:r,putStatementCoverage:u,flush:a}}var C=p("__TS_AGENT",{});function f(){return C._$BcWorker}function S(e){return C._$BcWorker=e,e}var m=v(250,e=>{for(let n of e.entries())f().postMessage(n)});c()._$stmtCov=m.putStatementCoverage;c()._$brCov=m.putBranchCoverage;var b=new Set;c()._$registerCoverageObject=function(e){let n=e.hash;if(b.has(n)){console.log(`Coverage interceptor added twice for ${n}. This seems to be a bug in the instrumentation.`);return}else b.add(n);if(!f()){let t=S(new h);(function(){let r=()=>{m.flush(),t.postMessage("unload")},u=function(i,o){!o||o.addEventListener(i,r,{capture:!0})},a=g();u("blur",a),u("unload",a),u("visibilitychange",a),u("beforeunload",a)})()}(function(){f().postMessage(`${l.ISTANBUL_COV_OBJECT} ${JSON.stringify(e)}`);let s=p("sentMaps",new Set);e.inputSourceMap&&(s.has(e.path)||(f().postMessage(`${l.MESSAGE_TYPE_SOURCEMAP} ${n}:${JSON.stringify(e.inputSourceMap)}`),s.add(e.path)))})()};})();
 $wnd.showcase.runAsyncCallback17("\"function ngb(a){var b;b=(Twb(),a.i).rows.length;QFb(a,b,0,new dwb((F0(),v0)));QFb(a,b,1,new dwb(v0));iGb(cD(a.j,96),b+1)}\nfunction ogb(){var a,b,c,d,e;d=new XFb;c=cD(d.j,96);Eh((Twb(),d.hb),'cw-FlexTable',true);d.hb.style[M7b]='32em';d.o[zbc]=5;d.o[Abc]=3;dGb(c,1,(VGb(),RGb));NFb(d,0,0,'\\u8FD9\\u662F\\u4E00\\u4E2A\\u53EF\\u652F\\u6301 <B>colspans<\\/B> \\u548C <B>rowspans<\\/B> \\u7684 FlexTable\\u3002  \\u60A8\\u53EF\\u4EE5\\u7528\\u5B83\\u6765\\u5E03\\u5C40\\u9875\\u9762\\u6216\\u4F5C\\u4E3A\\u5176\\u5B83\\u7279\\u6B8A\\u7528\\u9014\\u7684\\u8868\\u3002');(c.a.Sf(0,0),c.a.i.rows[0].cells[0])[qcc]=2;a=new bAb('\\u6DFB\\u52A0\\u884C',new sgb(d));Eh(a.hb,pdc,true);e=new bAb('\\u5220\\u9664\\u884C',new ugb(d));Eh(e.hb,pdc,true);b=new bRb;b.hb.className='cw-FlexTable-buttonPanel';$Qb(b,a);$Qb(b,e);QFb(d,0,1,b);fGb(c,0,1,($Gb(),ZGb));ngb(d);ngb(d);IFb(d,'cwFlexTable');return d}\nfunction pgb(a){var b;b=(Twb(),a.i).rows.length;if(b>1){KFb(a,b-1);iGb(cD(a.j,96),b-1)}}\nfunction sgb(a){this.a=a}\nzY(433,1,O9b,sgb);_.Wc=function tgb(a){ngb(this.a)};var yO=QXb(fac,'CwFlexTable/1',433);function ugb(a){this.a=a}\nzY(434,1,O9b,ugb);_.Wc=function vgb(a){pgb(this.a)};var zO=QXb(fac,'CwFlexTable/2',434);zY(435,1,Y9b);_.Ec=function ygb(){P$(this.a,ogb())};function iGb(a,b){(a.a.Sf(0,1),Twb(),a.a.i.rows[0].cells[1])[jdc]=b}\n_6b(Fl)(17);\n//# sourceURL=showcase-17.js\n";

const _$fiooe8m = "a32fcc4af02aca433c2ea9467c7c834b28d77b36";
function cov_1wlt7oacwo() {
  var path = "test/casestudies/gwt-showcase-js/war/showcase/deferredjs/6D4358C233509894BAB2C994643C8E4B/17.cache.js";
  var hash = "a32fcc4af02aca433c2ea9467c7c834b28d77b36";
  var global = typeof window === 'object' ? window : this;
  var gcv = "__coverage__";
  var coverageData = {
    path: "test/casestudies/gwt-showcase-js/war/showcase/deferredjs/6D4358C233509894BAB2C994643C8E4B/17.cache.js",
    statementMap: {},
    fnMap: {},
    branchMap: {},
    s: {},
    f: {},
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "a32fcc4af02aca433c2ea9467c7c834b28d77b36"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage=_$registerCoverageObject(coverage[path]);
  {
    // @ts-ignore
    cov_1wlt7oacwo = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1wlt7oacwo();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMXdsdDdvYWN3byIsInBhdGgiLCJoYXNoIiwiZ2xvYmFsIiwiRnVuY3Rpb24iLCJnY3YiLCJjb3ZlcmFnZURhdGEiLCJzdGF0ZW1lbnRNYXAiLCJmbk1hcCIsImJyYW5jaE1hcCIsInMiLCJmIiwiYiIsIl9jb3ZlcmFnZVNjaGVtYSIsImNvdmVyYWdlIiwiYWN0dWFsQ292ZXJhZ2UiXSwic291cmNlcyI6WyIxNy5jYWNoZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcImZ1bmN0aW9uIG5nYihhKXt2YXIgYjtiPShUd2IoKSxhLmkpLnJvd3MubGVuZ3RoO1FGYihhLGIsMCxuZXcgZHdiKChGMCgpLHYwKSkpO1FGYihhLGIsMSxuZXcgZHdiKHYwKSk7aUdiKGNEKGEuaiw5NiksYisxKX1cXG5mdW5jdGlvbiBvZ2IoKXt2YXIgYSxiLGMsZCxlO2Q9bmV3IFhGYjtjPWNEKGQuaiw5Nik7RWgoKFR3YigpLGQuaGIpLCdjdy1GbGV4VGFibGUnLHRydWUpO2QuaGIuc3R5bGVbTTdiXT0nMzJlbSc7ZC5vW3piY109NTtkLm9bQWJjXT0zO2RHYihjLDEsKFZHYigpLFJHYikpO05GYihkLDAsMCwnXFxcXHU4RkQ5XFxcXHU2NjJGXFxcXHU0RTAwXFxcXHU0RTJBXFxcXHU1M0VGXFxcXHU2NTJGXFxcXHU2MzAxIDxCPmNvbHNwYW5zPFxcXFwvQj4gXFxcXHU1NDhDIDxCPnJvd3NwYW5zPFxcXFwvQj4gXFxcXHU3Njg0IEZsZXhUYWJsZVxcXFx1MzAwMiAgXFxcXHU2MEE4XFxcXHU1M0VGXFxcXHU0RUU1XFxcXHU3NTI4XFxcXHU1QjgzXFxcXHU2NzY1XFxcXHU1RTAzXFxcXHU1QzQwXFxcXHU5ODc1XFxcXHU5NzYyXFxcXHU2MjE2XFxcXHU0RjVDXFxcXHU0RTNBXFxcXHU1MTc2XFxcXHU1QjgzXFxcXHU3Mjc5XFxcXHU2QjhBXFxcXHU3NTI4XFxcXHU5MDE0XFxcXHU3Njg0XFxcXHU4ODY4XFxcXHUzMDAyJyk7KGMuYS5TZigwLDApLGMuYS5pLnJvd3NbMF0uY2VsbHNbMF0pW3FjY109MjthPW5ldyBiQWIoJ1xcXFx1NkRGQlxcXFx1NTJBMFxcXFx1ODg0QycsbmV3IHNnYihkKSk7RWgoYS5oYixwZGMsdHJ1ZSk7ZT1uZXcgYkFiKCdcXFxcdTUyMjBcXFxcdTk2NjRcXFxcdTg4NEMnLG5ldyB1Z2IoZCkpO0VoKGUuaGIscGRjLHRydWUpO2I9bmV3IGJSYjtiLmhiLmNsYXNzTmFtZT0nY3ctRmxleFRhYmxlLWJ1dHRvblBhbmVsJzskUWIoYixhKTskUWIoYixlKTtRRmIoZCwwLDEsYik7ZkdiKGMsMCwxLCgkR2IoKSxaR2IpKTtuZ2IoZCk7bmdiKGQpO0lGYihkLCdjd0ZsZXhUYWJsZScpO3JldHVybiBkfVxcbmZ1bmN0aW9uIHBnYihhKXt2YXIgYjtiPShUd2IoKSxhLmkpLnJvd3MubGVuZ3RoO2lmKGI+MSl7S0ZiKGEsYi0xKTtpR2IoY0QoYS5qLDk2KSxiLTEpfX1cXG5mdW5jdGlvbiBzZ2IoYSl7dGhpcy5hPWF9XFxuelkoNDMzLDEsTzliLHNnYik7Xy5XYz1mdW5jdGlvbiB0Z2IoYSl7bmdiKHRoaXMuYSl9O3ZhciB5Tz1RWGIoZmFjLCdDd0ZsZXhUYWJsZS8xJyw0MzMpO2Z1bmN0aW9uIHVnYihhKXt0aGlzLmE9YX1cXG56WSg0MzQsMSxPOWIsdWdiKTtfLldjPWZ1bmN0aW9uIHZnYihhKXtwZ2IodGhpcy5hKX07dmFyIHpPPVFYYihmYWMsJ0N3RmxleFRhYmxlLzInLDQzNCk7elkoNDM1LDEsWTliKTtfLkVjPWZ1bmN0aW9uIHlnYigpe1AkKHRoaXMuYSxvZ2IoKSl9O2Z1bmN0aW9uIGlHYihhLGIpeyhhLmEuU2YoMCwxKSxUd2IoKSxhLmEuaS5yb3dzWzBdLmNlbGxzWzFdKVtqZGNdPWJ9XFxuXzZiKEZsKSgxNyk7XFxuLy8jIHNvdXJjZVVSTD1zaG93Y2FzZS0xNy5qc1xcblwiIl0sIm1hcHBpbmdzIjoiQUFBQSxrMkNBQWsyQyxVQUFBQSxlQUFBLE1BQUFDLElBQUEsNkdBQUFDLElBQUEsZ0RBQUFDLE1BQUEsS0FBQUMsUUFBQSxzQkFBQUMsR0FBQSxvQkFBQUMsWUFBQSxFQUFBTCxJQUFBLHlHQUFBTSxZQUFBLElBQUFDLEtBQUEsSUFBQUMsU0FBQSxJQUFBQyxDQUFBLElBQUFDLENBQUEsSUFBQUMsQ0FBQSxJQUFBQyxlQUFBLDRDQUFBWCxJQUFBLGlEQUFBWSxRQUFBLENBQUFYLE1BQUEsQ0FBQUUsR0FBQSxJQUFBRixNQUFBLENBQUFFLEdBQUEsVUFBQVMsUUFBQSxDQUFBYixJQUFBLEdBQUFhLFFBQUEsQ0FBQWIsSUFBQSxFQUFBQyxJQUFBLEdBQUFBLElBQUEsRUFBQVksUUFBQSxDQUFBYixJQUFBLEVBQUFLLFlBQUEsTUFBQVMsY0FBQSxDQUFBRCxRQUFBLENBQUFiLElBQUEsR0FldDFDO0FBQUFELGNBQUEsU0FBQUEsQ0FBQSxTQUFBZSxjQUFBLFdBQUFBLGNBQUEsRUFBQWYsY0FBQSJ9")