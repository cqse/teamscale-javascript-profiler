/** $IS_JS_PROFILER_INSTRUMENTED=true **/ (()=>{function d(e){let n=new Blob([e],{type:"text/javascript"}),t=URL.createObjectURL(n),s=new Worker(t);return URL.revokeObjectURL(t),s}function h(){return d('var r=class{constructor(e){this.cachedMessages=[];this.url=e,this.socket=this.createSocket()}createSocket(){let e=new WebSocket(this.url);return e.onopen=()=>this.onopen(),e.onclose=()=>this.onclose(),e}onclose(){this.socket=this.createSocket()}onopen(){console.log("Connection to Coverage Collector established."),this.cachedMessages.forEach(e=>this.socket.send(e)),this.cachedMessages=[]}send(e){this.socket.readyState===WebSocket.OPEN?this.socket.send(e):(this.cachedMessages.push(e),this.cachedMessages.length%500===0&&console.log(`More than ${this.cachedMessages.length} messages are queued to be sent.`))}};var C=20,m=1e3,d=class{constructor(e,t){this.milliseconds=e;this.onCountedToZero=t;this.timerHandle=null}restartCountdown(){this.stopCountdown(),this.timerHandle=self.setTimeout(()=>{this.stopCountdown(),this.onCountedToZero()},this.milliseconds)}stopCountdown(){this.timerHandle!==null&&(self.clearTimeout(this.timerHandle),this.timerHandle=null)}},a=class{constructor(e){this.socket=e,this.cachedCoveredRanges=new Map,this.numberOfCachedPositions=0,this.flushCountdown=new d(m,()=>this.flush())}addRange(e,t){if(!t.start.line||!t.end.line)return;let o=this.cachedCoveredRanges.get(e);o||(o=new Set,this.cachedCoveredRanges.set(e,o)),o.add(t),this.numberOfCachedPositions+=1,this.flushCountdown.restartCountdown(),this.numberOfCachedPositions>=C&&this.flush()}flush(){this.numberOfCachedPositions!==0&&(this.flushCountdown.stopCountdown(),this.cachedCoveredRanges.forEach((e,t)=>{let o=Array.from(e).map(n=>`${n.start.line}:${n.start.column}:${n.end.line}:${n.end.column}`);this.socket.send(`${"c"} ${t} ${o.join(" ")}`),e.clear()}),this.cachedCoveredRanges.clear(),this.numberOfCachedPositions=0)}};console.log("Starting coverage forwarding worker.");var u=new r("ws://localhost:54678/socket"),h=new a(u),f=new Map;onmessage=s=>{if(Array.isArray(s.data))p(s.data);else{let e=s.data;if(e.startsWith("s"))u.send(e);else if(e.startsWith("i")){let t=JSON.parse(e.substring(2));f.set(t.hash,t),console.info(`Received coverage mapping information for "${t.hash}".`)}else e==="unload"?h.flush():console.error(`No handler for message: ${e}`)}};function p(s){var n;let e=s[0],t=s[1],o=f.get(e);if(!o){console.log(`No coverage mapping information for ${e} available!`);return}for(let[c,i]of t.branches.entries()){let l=(n=o.branchMap[c])==null?void 0:n.locations[i];l&&h.addRange(e,l)}for(let c of t.statements){let i=o.statementMap[c];i&&h.addRange(e,i)}}\n')}function c(){return g()}function g(){return window}function p(e,n){let t=c()[e];return t||(t=n,c()[e]=t),t}var l;(function(r){r.MESSAGE_TYPE_SOURCEMAP="s",r.MESSAGE_TYPE_COVERAGE="c",r.ISTANBUL_COV_OBJECT="i",r.UNRESOLVED_CODE_ENTITY="u"})(l||(l={}));function v(e,n){let t=new Map;function s(i){let o=t.get(i);return o||(o={branches:new Map,statements:new Set},t.set(i,o),o)}function r(i,o,w){s(i).branches.set(o,w)}function u(i,o){s(i).statements.add(o)}function a(){n(t),t.clear()}return setInterval(()=>a(),e),{putBranchCoverage:r,putStatementCoverage:u,flush:a}}var C=p("__TS_AGENT",{});function f(){return C._$BcWorker}function S(e){return C._$BcWorker=e,e}var m=v(250,e=>{for(let n of e.entries())f().postMessage(n)});c()._$stmtCov=m.putStatementCoverage;c()._$brCov=m.putBranchCoverage;var b=new Set;c()._$registerCoverageObject=function(e){let n=e.hash;if(b.has(n)){console.log(`Coverage interceptor added twice for ${n}. This seems to be a bug in the instrumentation.`);return}else b.add(n);if(!f()){let t=S(new h);(function(){let r=()=>{m.flush(),t.postMessage("unload")},u=function(i,o){!o||o.addEventListener(i,r,{capture:!0})},a=g();u("blur",a),u("unload",a),u("visibilitychange",a),u("beforeunload",a)})()}(function(){f().postMessage(`${l.ISTANBUL_COV_OBJECT} ${JSON.stringify(e)}`);let s=p("sentMaps",new Set);e.inputSourceMap&&(s.has(e.path)||(f().postMessage(`${l.MESSAGE_TYPE_SOURCEMAP} ${n}:${JSON.stringify(e.inputSourceMap)}`),s.add(e.path)))})()};})();
 $wnd.showcase.runAsyncCallback31("\"var KL=QWb($8b,'ColorConstants');function k9(a,b){var c;c=rC(k$b(a.a,b));if(c!=null){return c}if(FXb(b,ecc)){n$b(a.a,ecc,dcc);return dcc}if(FXb(b,Xac)){n$b(a.a,Xac,hcc);return hcc}if(FXb(b,$ac)){n$b(a.a,$ac,fcc);return fcc}if(FXb(b,'grey')){n$b(a.a,'grey','Grey');return 'Grey'}if(FXb(b,vdc)){n$b(a.a,vdc,wdc);return wdc}if(FXb(b,Yac)){n$b(a.a,Yac,'Red');return 'Red'}if(FXb(b,ccc)){n$b(a.a,ccc,bcc);return bcc}if(FXb(b,Zac)){n$b(a.a,Zac,gcc);return gcc}throw ZW(new u4b(\"Cannot find constant '\"+b+\"'; expecting a method name\"))}\nfunction l9(){this.a=new R2b}\nCX(939,1,{},l9);var JL=OWb($8b,'ColorConstants_',939);function K9(a){var b,c,d,e,f,g;a.b=new l9;c=new WEb;b=nC(c.j,96);c.o[tac]=5;g=(f=(JWb(KL),KL.j),RXb(f,f.lastIndexOf('.')+1));d=new Lyb(g);Lh(d,new O9(a,g),(Ut(),Ut(),Tt));e=new yGb;e.e[tac]=3;vGb(e,new MCb(mdc));vGb(e,d);PEb(c,0,0,e);(b.a.Gf(0,0),Uvb(),b.a.i.rows[0].cells[0])[jbc]=2;a.a=new GJb;xJb(a.a,Yac);th(a.a,edc);MEb(c,1,0,'<b>Name of method:<\\/b>');PEb(c,1,1,a.a);a.c=new GJb;Byb(a.c,false);th(a.c,edc);MEb(c,2,0,'<b>Lookup results:<\\/b>');PEb(c,2,1,a.c);Lh(a.a,new Q9(a),(vu(),vu(),uu));L9(a);return c}\nfunction L9(b){var c,d;d=VXb(tJb(b.a));if(FXb(d,'')){xJb(b.c,'<Please enter a method name above>')}else{try{c=k9(b.b,d);xJb(b.c,c)}catch(a){a=YW(a);if(uC(a,173)){xJb(b.c,'<Not found>')}else throw ZW(a)}}}\nfunction O9(a,b){this.a=a;this.b=b}\nCX(485,1,O8b,O9);_.Wc=function P9(a){xZ(this.a,this.b+sdc)};var UL=OWb($8b,'CwConstantsWithLookupExample/1',485);function Q9(a){this.a=a}\nCX(486,1,acc,Q9);_.Yc=function R9(a){L9(this.a)};var VL=OWb($8b,'CwConstantsWithLookupExample/2',486);CX(487,1,X8b);_.Ec=function U9(){SZ(this.b,K9(this.a))};Z5b(El)(31);\n//# sourceURL=showcase-31.js\n";

const _$fiooead = "c2b27d763c0f77e422d4ce1d91e0a9f22af2827e";
function cov_2rk45xnyki() {
  var path = "test/casestudies/gwt-showcase-js/war/showcase/deferredjs/7F7B8D3D7A29C9E937A61F6A86A724B4/31.cache.js";
  var hash = "c2b27d763c0f77e422d4ce1d91e0a9f22af2827e";
  var global = typeof window === 'object' ? window : this;
  var gcv = "__coverage__";
  var coverageData = {
    path: "test/casestudies/gwt-showcase-js/war/showcase/deferredjs/7F7B8D3D7A29C9E937A61F6A86A724B4/31.cache.js",
    statementMap: {},
    fnMap: {},
    branchMap: {},
    s: {},
    f: {},
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "c2b27d763c0f77e422d4ce1d91e0a9f22af2827e"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage=_$registerCoverageObject(coverage[path]);
  {
    // @ts-ignore
    cov_2rk45xnyki = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2rk45xnyki();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMnJrNDV4bnlraSIsInBhdGgiLCJoYXNoIiwiZ2xvYmFsIiwiRnVuY3Rpb24iLCJnY3YiLCJjb3ZlcmFnZURhdGEiLCJzdGF0ZW1lbnRNYXAiLCJmbk1hcCIsImJyYW5jaE1hcCIsInMiLCJmIiwiYiIsIl9jb3ZlcmFnZVNjaGVtYSIsImNvdmVyYWdlIiwiYWN0dWFsQ292ZXJhZ2UiXSwic291cmNlcyI6WyIzMS5jYWNoZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInZhciBLTD1RV2IoJDhiLCdDb2xvckNvbnN0YW50cycpO2Z1bmN0aW9uIGs5KGEsYil7dmFyIGM7Yz1yQyhrJGIoYS5hLGIpKTtpZihjIT1udWxsKXtyZXR1cm4gY31pZihGWGIoYixlY2MpKXtuJGIoYS5hLGVjYyxkY2MpO3JldHVybiBkY2N9aWYoRlhiKGIsWGFjKSl7biRiKGEuYSxYYWMsaGNjKTtyZXR1cm4gaGNjfWlmKEZYYihiLCRhYykpe24kYihhLmEsJGFjLGZjYyk7cmV0dXJuIGZjY31pZihGWGIoYiwnZ3JleScpKXtuJGIoYS5hLCdncmV5JywnR3JleScpO3JldHVybiAnR3JleSd9aWYoRlhiKGIsdmRjKSl7biRiKGEuYSx2ZGMsd2RjKTtyZXR1cm4gd2RjfWlmKEZYYihiLFlhYykpe24kYihhLmEsWWFjLCdSZWQnKTtyZXR1cm4gJ1JlZCd9aWYoRlhiKGIsY2NjKSl7biRiKGEuYSxjY2MsYmNjKTtyZXR1cm4gYmNjfWlmKEZYYihiLFphYykpe24kYihhLmEsWmFjLGdjYyk7cmV0dXJuIGdjY310aHJvdyBaVyhuZXcgdTRiKFxcXCJDYW5ub3QgZmluZCBjb25zdGFudCAnXFxcIitiK1xcXCInOyBleHBlY3RpbmcgYSBtZXRob2QgbmFtZVxcXCIpKX1cXG5mdW5jdGlvbiBsOSgpe3RoaXMuYT1uZXcgUjJifVxcbkNYKDkzOSwxLHt9LGw5KTt2YXIgSkw9T1diKCQ4YiwnQ29sb3JDb25zdGFudHNfJyw5MzkpO2Z1bmN0aW9uIEs5KGEpe3ZhciBiLGMsZCxlLGYsZzthLmI9bmV3IGw5O2M9bmV3IFdFYjtiPW5DKGMuaiw5Nik7Yy5vW3RhY109NTtnPShmPShKV2IoS0wpLEtMLmopLFJYYihmLGYubGFzdEluZGV4T2YoJy4nKSsxKSk7ZD1uZXcgTHliKGcpO0xoKGQsbmV3IE85KGEsZyksKFV0KCksVXQoKSxUdCkpO2U9bmV3IHlHYjtlLmVbdGFjXT0zO3ZHYihlLG5ldyBNQ2IobWRjKSk7dkdiKGUsZCk7UEViKGMsMCwwLGUpOyhiLmEuR2YoMCwwKSxVdmIoKSxiLmEuaS5yb3dzWzBdLmNlbGxzWzBdKVtqYmNdPTI7YS5hPW5ldyBHSmI7eEpiKGEuYSxZYWMpO3RoKGEuYSxlZGMpO01FYihjLDEsMCwnPGI+TmFtZSBvZiBtZXRob2Q6PFxcXFwvYj4nKTtQRWIoYywxLDEsYS5hKTthLmM9bmV3IEdKYjtCeWIoYS5jLGZhbHNlKTt0aChhLmMsZWRjKTtNRWIoYywyLDAsJzxiPkxvb2t1cCByZXN1bHRzOjxcXFxcL2I+Jyk7UEViKGMsMiwxLGEuYyk7TGgoYS5hLG5ldyBROShhKSwodnUoKSx2dSgpLHV1KSk7TDkoYSk7cmV0dXJuIGN9XFxuZnVuY3Rpb24gTDkoYil7dmFyIGMsZDtkPVZYYih0SmIoYi5hKSk7aWYoRlhiKGQsJycpKXt4SmIoYi5jLCc8UGxlYXNlIGVudGVyIGEgbWV0aG9kIG5hbWUgYWJvdmU+Jyl9ZWxzZXt0cnl7Yz1rOShiLmIsZCk7eEpiKGIuYyxjKX1jYXRjaChhKXthPVlXKGEpO2lmKHVDKGEsMTczKSl7eEpiKGIuYywnPE5vdCBmb3VuZD4nKX1lbHNlIHRocm93IFpXKGEpfX19XFxuZnVuY3Rpb24gTzkoYSxiKXt0aGlzLmE9YTt0aGlzLmI9Yn1cXG5DWCg0ODUsMSxPOGIsTzkpO18uV2M9ZnVuY3Rpb24gUDkoYSl7eFoodGhpcy5hLHRoaXMuYitzZGMpfTt2YXIgVUw9T1diKCQ4YiwnQ3dDb25zdGFudHNXaXRoTG9va3VwRXhhbXBsZS8xJyw0ODUpO2Z1bmN0aW9uIFE5KGEpe3RoaXMuYT1hfVxcbkNYKDQ4NiwxLGFjYyxROSk7Xy5ZYz1mdW5jdGlvbiBSOShhKXtMOSh0aGlzLmEpfTt2YXIgVkw9T1diKCQ4YiwnQ3dDb25zdGFudHNXaXRoTG9va3VwRXhhbXBsZS8yJyw0ODYpO0NYKDQ4NywxLFg4Yik7Xy5FYz1mdW5jdGlvbiBVOSgpe1NaKHRoaXMuYixLOSh0aGlzLmEpKX07WjViKEVsKSgzMSk7XFxuLy8jIHNvdXJjZVVSTD1zaG93Y2FzZS0zMS5qc1xcblwiIl0sIm1hcHBpbmdzIjoiQUFBQSwwckRBQTByRCxVQUFBQSxlQUFBLE1BQUFDLElBQUEsNkdBQUFDLElBQUEsZ0RBQUFDLE1BQUEsS0FBQUMsUUFBQSxzQkFBQUMsR0FBQSxvQkFBQUMsWUFBQSxFQUFBTCxJQUFBLHlHQUFBTSxZQUFBLElBQUFDLEtBQUEsSUFBQUMsU0FBQSxJQUFBQyxDQUFBLElBQUFDLENBQUEsSUFBQUMsQ0FBQSxJQUFBQyxlQUFBLDRDQUFBWCxJQUFBLGlEQUFBWSxRQUFBLENBQUFYLE1BQUEsQ0FBQUUsR0FBQSxJQUFBRixNQUFBLENBQUFFLEdBQUEsVUFBQVMsUUFBQSxDQUFBYixJQUFBLEdBQUFhLFFBQUEsQ0FBQWIsSUFBQSxFQUFBQyxJQUFBLEdBQUFBLElBQUEsRUFBQVksUUFBQSxDQUFBYixJQUFBLEVBQUFLLFlBQUEsTUFBQVMsY0FBQSxDQUFBRCxRQUFBLENBQUFiLElBQUEsR0FlOXFEO0FBQUFELGNBQUEsU0FBQUEsQ0FBQSxTQUFBZSxjQUFBLFdBQUFBLGNBQUEsRUFBQWYsY0FBQSJ9")