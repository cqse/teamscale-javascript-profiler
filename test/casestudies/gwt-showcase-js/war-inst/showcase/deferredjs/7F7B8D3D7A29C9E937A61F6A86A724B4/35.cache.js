/** $IS_JS_PROFILER_INSTRUMENTED=true **/ (()=>{function d(e){let n=new Blob([e],{type:"text/javascript"}),t=URL.createObjectURL(n),s=new Worker(t);return URL.revokeObjectURL(t),s}function h(){return d('var r=class{constructor(e){this.cachedMessages=[];this.url=e,this.socket=this.createSocket()}createSocket(){let e=new WebSocket(this.url);return e.onopen=()=>this.onopen(),e.onclose=()=>this.onclose(),e}onclose(){this.socket=this.createSocket()}onopen(){console.log("Connection to Coverage Collector established."),this.cachedMessages.forEach(e=>this.socket.send(e)),this.cachedMessages=[]}send(e){this.socket.readyState===WebSocket.OPEN?this.socket.send(e):(this.cachedMessages.push(e),this.cachedMessages.length%500===0&&console.log(`More than ${this.cachedMessages.length} messages are queued to be sent.`))}};var C=20,m=1e3,d=class{constructor(e,t){this.milliseconds=e;this.onCountedToZero=t;this.timerHandle=null}restartCountdown(){this.stopCountdown(),this.timerHandle=self.setTimeout(()=>{this.stopCountdown(),this.onCountedToZero()},this.milliseconds)}stopCountdown(){this.timerHandle!==null&&(self.clearTimeout(this.timerHandle),this.timerHandle=null)}},a=class{constructor(e){this.socket=e,this.cachedCoveredRanges=new Map,this.numberOfCachedPositions=0,this.flushCountdown=new d(m,()=>this.flush())}addRange(e,t){if(!t.start.line||!t.end.line)return;let o=this.cachedCoveredRanges.get(e);o||(o=new Set,this.cachedCoveredRanges.set(e,o)),o.add(t),this.numberOfCachedPositions+=1,this.flushCountdown.restartCountdown(),this.numberOfCachedPositions>=C&&this.flush()}flush(){this.numberOfCachedPositions!==0&&(this.flushCountdown.stopCountdown(),this.cachedCoveredRanges.forEach((e,t)=>{let o=Array.from(e).map(n=>`${n.start.line}:${n.start.column}:${n.end.line}:${n.end.column}`);this.socket.send(`${"c"} ${t} ${o.join(" ")}`),e.clear()}),this.cachedCoveredRanges.clear(),this.numberOfCachedPositions=0)}};console.log("Starting coverage forwarding worker.");var u=new r("ws://localhost:54678/socket"),h=new a(u),f=new Map;onmessage=s=>{if(Array.isArray(s.data))p(s.data);else{let e=s.data;if(e.startsWith("s"))u.send(e);else if(e.startsWith("i")){let t=JSON.parse(e.substring(2));f.set(t.hash,t),console.info(`Received coverage mapping information for "${t.hash}".`)}else e==="unload"?h.flush():console.error(`No handler for message: ${e}`)}};function p(s){var n;let e=s[0],t=s[1],o=f.get(e);if(!o){console.log(`No coverage mapping information for ${e} available!`);return}for(let[c,i]of t.branches.entries()){let l=(n=o.branchMap[c])==null?void 0:n.locations[i];l&&h.addRange(e,l)}for(let c of t.statements){let i=o.statementMap[c];i&&h.addRange(e,i)}}\n')}function c(){return g()}function g(){return window}function p(e,n){let t=c()[e];return t||(t=n,c()[e]=t),t}var l;(function(r){r.MESSAGE_TYPE_SOURCEMAP="s",r.MESSAGE_TYPE_COVERAGE="c",r.ISTANBUL_COV_OBJECT="i",r.UNRESOLVED_CODE_ENTITY="u"})(l||(l={}));function v(e,n){let t=new Map;function s(i){let o=t.get(i);return o||(o={branches:new Map,statements:new Set},t.set(i,o),o)}function r(i,o,w){s(i).branches.set(o,w)}function u(i,o){s(i).statements.add(o)}function a(){n(t),t.clear()}return setInterval(()=>a(),e),{putBranchCoverage:r,putStatementCoverage:u,flush:a}}var C=p("__TS_AGENT",{});function f(){return C._$BcWorker}function S(e){return C._$BcWorker=e,e}var m=v(250,e=>{for(let n of e.entries())f().postMessage(n)});c()._$stmtCov=m.putStatementCoverage;c()._$brCov=m.putBranchCoverage;var b=new Set;c()._$registerCoverageObject=function(e){let n=e.hash;if(b.has(n)){console.log(`Coverage interceptor added twice for ${n}. This seems to be a bug in the instrumentation.`);return}else b.add(n);if(!f()){let t=S(new h);(function(){let r=()=>{m.flush(),t.postMessage("unload")},u=function(i,o){!o||o.addEventListener(i,r,{capture:!0})},a=g();u("blur",a),u("unload",a),u("visibilitychange",a),u("beforeunload",a)})()}(function(){f().postMessage(`${l.ISTANBUL_COV_OBJECT} ${JSON.stringify(e)}`);let s=p("sentMaps",new Set);e.inputSourceMap&&(s.has(e.path)||(f().postMessage(`${l.MESSAGE_TYPE_SOURCEMAP} ${n}:${JSON.stringify(e.inputSourceMap)}`),s.add(e.path)))})()};})();
 $wnd.showcase.runAsyncCallback35("\"function hhb(){var a,b,c,d,e,f,g;d=new ISb;e=new FCb;Mh(d,new nhb(e),(!Cw&&(Cw=new bu),Cw));a=new ISb;a.j=true;mTb(a.c);a.i=true;mTb(a.c);a.g=51;mTb(a.c);f=new FCb;(Uvb(),f.hb).style['marginTop']=(As(),'15.0px');Mh(a,new nhb(f),(!Cw&&(Cw=new bu),Cw));GSb(d,new bB,true);GSb(a,new bB,true);c=(sy(),uy((fz(),yy)));b=new iSb;dSb(b,new wSb(c));HSb(b.d);g=new bQb;$Pb(g,new MCb('<b>Permanent DatePicker:<\\/b>'));$Pb(g,e);$Pb(g,d);$Pb(g,f);$Pb(g,a);$Pb(g,new MCb('<br><br><br><b>DateBox with popup DatePicker:<\\/b>'));$Pb(g,b);return g}\nCX(498,1,X8b);_.Ec=function mhb(){SZ(this.a,hhb())};function nhb(a){this.a=a}\nCX(291,1,z8b,nhb);_.oc=function ohb(a){var b,c;b=nC(a.cd(),31);c=Vx((sy(),uy((fz(),zy))),b,null);DCb(this.a,c)};var WN=OWb(h9b,'CwDatePicker/MyDateValueChangeHandler',291);function HSb(a){a.j=true;mTb(a.c)}\nZ5b(El)(35);\n//# sourceURL=showcase-35.js\n";

const _$fiooeah = "36913f89f214c4fc0b882766d7f002ae3684bb39";
function cov_1he9xxtfqv() {
  var path = "test/casestudies/gwt-showcase-js/war/showcase/deferredjs/7F7B8D3D7A29C9E937A61F6A86A724B4/35.cache.js";
  var hash = "36913f89f214c4fc0b882766d7f002ae3684bb39";
  var global = typeof window === 'object' ? window : this;
  var gcv = "__coverage__";
  var coverageData = {
    path: "test/casestudies/gwt-showcase-js/war/showcase/deferredjs/7F7B8D3D7A29C9E937A61F6A86A724B4/35.cache.js",
    statementMap: {},
    fnMap: {},
    branchMap: {},
    s: {},
    f: {},
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "36913f89f214c4fc0b882766d7f002ae3684bb39"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage=_$registerCoverageObject(coverage[path]);
  {
    // @ts-ignore
    cov_1he9xxtfqv = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1he9xxtfqv();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMWhlOXh4dGZxdiIsInBhdGgiLCJoYXNoIiwiZ2xvYmFsIiwiRnVuY3Rpb24iLCJnY3YiLCJjb3ZlcmFnZURhdGEiLCJzdGF0ZW1lbnRNYXAiLCJmbk1hcCIsImJyYW5jaE1hcCIsInMiLCJmIiwiYiIsIl9jb3ZlcmFnZVNjaGVtYSIsImNvdmVyYWdlIiwiYWN0dWFsQ292ZXJhZ2UiXSwic291cmNlcyI6WyIzNS5jYWNoZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcImZ1bmN0aW9uIGhoYigpe3ZhciBhLGIsYyxkLGUsZixnO2Q9bmV3IElTYjtlPW5ldyBGQ2I7TWgoZCxuZXcgbmhiKGUpLCghQ3cmJihDdz1uZXcgYnUpLEN3KSk7YT1uZXcgSVNiO2Euaj10cnVlO21UYihhLmMpO2EuaT10cnVlO21UYihhLmMpO2EuZz01MTttVGIoYS5jKTtmPW5ldyBGQ2I7KFV2YigpLGYuaGIpLnN0eWxlWydtYXJnaW5Ub3AnXT0oQXMoKSwnMTUuMHB4Jyk7TWgoYSxuZXcgbmhiKGYpLCghQ3cmJihDdz1uZXcgYnUpLEN3KSk7R1NiKGQsbmV3IGJCLHRydWUpO0dTYihhLG5ldyBiQix0cnVlKTtjPShzeSgpLHV5KChmeigpLHl5KSkpO2I9bmV3IGlTYjtkU2IoYixuZXcgd1NiKGMpKTtIU2IoYi5kKTtnPW5ldyBiUWI7JFBiKGcsbmV3IE1DYignPGI+UGVybWFuZW50IERhdGVQaWNrZXI6PFxcXFwvYj4nKSk7JFBiKGcsZSk7JFBiKGcsZCk7JFBiKGcsZik7JFBiKGcsYSk7JFBiKGcsbmV3IE1DYignPGJyPjxicj48YnI+PGI+RGF0ZUJveCB3aXRoIHBvcHVwIERhdGVQaWNrZXI6PFxcXFwvYj4nKSk7JFBiKGcsYik7cmV0dXJuIGd9XFxuQ1goNDk4LDEsWDhiKTtfLkVjPWZ1bmN0aW9uIG1oYigpe1NaKHRoaXMuYSxoaGIoKSl9O2Z1bmN0aW9uIG5oYihhKXt0aGlzLmE9YX1cXG5DWCgyOTEsMSx6OGIsbmhiKTtfLm9jPWZ1bmN0aW9uIG9oYihhKXt2YXIgYixjO2I9bkMoYS5jZCgpLDMxKTtjPVZ4KChzeSgpLHV5KChmeigpLHp5KSkpLGIsbnVsbCk7RENiKHRoaXMuYSxjKX07dmFyIFdOPU9XYihoOWIsJ0N3RGF0ZVBpY2tlci9NeURhdGVWYWx1ZUNoYW5nZUhhbmRsZXInLDI5MSk7ZnVuY3Rpb24gSFNiKGEpe2Euaj10cnVlO21UYihhLmMpfVxcblo1YihFbCkoMzUpO1xcbi8vIyBzb3VyY2VVUkw9c2hvd2Nhc2UtMzUuanNcXG5cIiJdLCJtYXBwaW5ncyI6IkFBQUEsbTJCQUFtMkIsVUFBQUEsZUFBQSxNQUFBQyxJQUFBLDZHQUFBQyxJQUFBLGdEQUFBQyxNQUFBLEtBQUFDLFFBQUEsc0JBQUFDLEdBQUEsb0JBQUFDLFlBQUEsRUFBQUwsSUFBQSx5R0FBQU0sWUFBQSxJQUFBQyxLQUFBLElBQUFDLFNBQUEsSUFBQUMsQ0FBQSxJQUFBQyxDQUFBLElBQUFDLENBQUEsSUFBQUMsZUFBQSw0Q0FBQVgsSUFBQSxpREFBQVksUUFBQSxDQUFBWCxNQUFBLENBQUFFLEdBQUEsSUFBQUYsTUFBQSxDQUFBRSxHQUFBLFVBQUFTLFFBQUEsQ0FBQWIsSUFBQSxHQUFBYSxRQUFBLENBQUFiLElBQUEsRUFBQUMsSUFBQSxHQUFBQSxJQUFBLEVBQUFZLFFBQUEsQ0FBQWIsSUFBQSxFQUFBSyxZQUFBLE1BQUFTLGNBQUEsQ0FBQUQsUUFBQSxDQUFBYixJQUFBLEdBZXYxQjtBQUFBRCxjQUFBLFNBQUFBLENBQUEsU0FBQWUsY0FBQSxXQUFBQSxjQUFBLEVBQUFmLGNBQUEifQ==")