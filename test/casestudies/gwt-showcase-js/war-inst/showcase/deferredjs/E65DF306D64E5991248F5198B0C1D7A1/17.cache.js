/** $IS_JS_PROFILER_INSTRUMENTED=true **/ (()=>{function d(e){let n=new Blob([e],{type:"text/javascript"}),t=URL.createObjectURL(n),s=new Worker(t);return URL.revokeObjectURL(t),s}function h(){return d('var r=class{constructor(e){this.cachedMessages=[];this.url=e,this.socket=this.createSocket()}createSocket(){let e=new WebSocket(this.url);return e.onopen=()=>this.onopen(),e.onclose=()=>this.onclose(),e}onclose(){this.socket=this.createSocket()}onopen(){console.log("Connection to Coverage Collector established."),this.cachedMessages.forEach(e=>this.socket.send(e)),this.cachedMessages=[]}send(e){this.socket.readyState===WebSocket.OPEN?this.socket.send(e):(this.cachedMessages.push(e),this.cachedMessages.length%500===0&&console.log(`More than ${this.cachedMessages.length} messages are queued to be sent.`))}};var C=20,m=1e3,d=class{constructor(e,t){this.milliseconds=e;this.onCountedToZero=t;this.timerHandle=null}restartCountdown(){this.stopCountdown(),this.timerHandle=self.setTimeout(()=>{this.stopCountdown(),this.onCountedToZero()},this.milliseconds)}stopCountdown(){this.timerHandle!==null&&(self.clearTimeout(this.timerHandle),this.timerHandle=null)}},a=class{constructor(e){this.socket=e,this.cachedCoveredRanges=new Map,this.numberOfCachedPositions=0,this.flushCountdown=new d(m,()=>this.flush())}addRange(e,t){if(!t.start.line||!t.end.line)return;let o=this.cachedCoveredRanges.get(e);o||(o=new Set,this.cachedCoveredRanges.set(e,o)),o.add(t),this.numberOfCachedPositions+=1,this.flushCountdown.restartCountdown(),this.numberOfCachedPositions>=C&&this.flush()}flush(){this.numberOfCachedPositions!==0&&(this.flushCountdown.stopCountdown(),this.cachedCoveredRanges.forEach((e,t)=>{let o=Array.from(e).map(n=>`${n.start.line}:${n.start.column}:${n.end.line}:${n.end.column}`);this.socket.send(`${"c"} ${t} ${o.join(" ")}`),e.clear()}),this.cachedCoveredRanges.clear(),this.numberOfCachedPositions=0)}};console.log("Starting coverage forwarding worker.");var u=new r("ws://localhost:54678/socket"),h=new a(u),f=new Map;onmessage=s=>{if(Array.isArray(s.data))p(s.data);else{let e=s.data;if(e.startsWith("s"))u.send(e);else if(e.startsWith("i")){let t=JSON.parse(e.substring(2));f.set(t.hash,t),console.info(`Received coverage mapping information for "${t.hash}".`)}else e==="unload"?h.flush():console.error(`No handler for message: ${e}`)}};function p(s){var n;let e=s[0],t=s[1],o=f.get(e);if(!o){console.log(`No coverage mapping information for ${e} available!`);return}for(let[c,i]of t.branches.entries()){let l=(n=o.branchMap[c])==null?void 0:n.locations[i];l&&h.addRange(e,l)}for(let c of t.statements){let i=o.statementMap[c];i&&h.addRange(e,i)}}\n')}function c(){return g()}function g(){return window}function p(e,n){let t=c()[e];return t||(t=n,c()[e]=t),t}var l;(function(r){r.MESSAGE_TYPE_SOURCEMAP="s",r.MESSAGE_TYPE_COVERAGE="c",r.ISTANBUL_COV_OBJECT="i",r.UNRESOLVED_CODE_ENTITY="u"})(l||(l={}));function v(e,n){let t=new Map;function s(i){let o=t.get(i);return o||(o={branches:new Map,statements:new Set},t.set(i,o),o)}function r(i,o,w){s(i).branches.set(o,w)}function u(i,o){s(i).statements.add(o)}function a(){n(t),t.clear()}return setInterval(()=>a(),e),{putBranchCoverage:r,putStatementCoverage:u,flush:a}}var C=p("__TS_AGENT",{});function f(){return C._$BcWorker}function S(e){return C._$BcWorker=e,e}var m=v(250,e=>{for(let n of e.entries())f().postMessage(n)});c()._$stmtCov=m.putStatementCoverage;c()._$brCov=m.putBranchCoverage;var b=new Set;c()._$registerCoverageObject=function(e){let n=e.hash;if(b.has(n)){console.log(`Coverage interceptor added twice for ${n}. This seems to be a bug in the instrumentation.`);return}else b.add(n);if(!f()){let t=S(new h);(function(){let r=()=>{m.flush(),t.postMessage("unload")},u=function(i,o){!o||o.addEventListener(i,r,{capture:!0})},a=g();u("blur",a),u("unload",a),u("visibilitychange",a),u("beforeunload",a)})()}(function(){f().postMessage(`${l.ISTANBUL_COV_OBJECT} ${JSON.stringify(e)}`);let s=p("sentMaps",new Set);e.inputSourceMap&&(s.has(e.path)||(f().postMessage(`${l.MESSAGE_TYPE_SOURCEMAP} ${n}:${JSON.stringify(e.inputSourceMap)}`),s.add(e.path)))})()};})();
 $wnd.showcase.runAsyncCallback17("\"function qtb(a){var b;b=(WJb(),a.i).rows.length;TSb(a,b,0,new gJb((Hdb(),xdb)));TSb(a,b,1,new gJb(xdb));lTb(MP(a.j,96),b+1)}\nfunction rtb(){var a,b,c,d,e;d=new $Sb;c=MP(d.j,96);Eh((WJb(),d.hb),'cw-FlexTable',true);d.hb.style[Pkc]='32em';d.o[Ioc]=5;d.o[Joc]=3;gTb(c,1,(YTb(),UTb));QSb(d,0,0,\"Ceci est un tableau flexible qui prend en charge les <B>plages de colonne<\\/B> et les <B>plages de ligne<\\/B>. Vous pouvez l'utiliser pour mettre en forme votre page ou en tant que tableau r\\xE9serv\\xE9 \\xE0 un but pr\\xE9cis.\");(c.a.Xg(0,0),c.a.i.rows[0].cells[0])[tpc]=2;a=new eNb('Ajouter une ligne',new vtb(d));Eh(a.hb,pqc,true);e=new eNb('Supprimer une ligne',new xtb(d));Eh(e.hb,pqc,true);b=new e2b;b.hb.className='cw-FlexTable-buttonPanel';b2b(b,a);b2b(b,e);TSb(d,0,1,b);iTb(c,0,1,(bUb(),aUb));qtb(d);qtb(d);LSb(d,'cwFlexTable');return d}\nfunction stb(a){var b;b=(WJb(),a.i).rows.length;if(b>1){NSb(a,b-1);lTb(MP(a.j,96),b-1)}}\nfunction vtb(a){this.a=a}\nB9(443,1,$mc,vtb);_.Wc=function wtb(a){qtb(this.a)};var A_=T8b(pnc,'CwFlexTable/1',443);function xtb(a){this.a=a}\nB9(444,1,$mc,xtb);_.Wc=function ytb(a){stb(this.a)};var B_=T8b(pnc,'CwFlexTable/2',444);B9(445,1,hnc);_.Ec=function Btb(){Rbb(this.a,rtb())};function lTb(a,b){(a.a.Xg(0,1),WJb(),a.a.i.rows[0].cells[1])[jqc]=b}\nckc(Fl)(17);\n//# sourceURL=showcase-17.js\n";

const _$fiooecj = "93db2c584ef808e6b40c71982493f1c574298734";
function cov_uul22xciv() {
  var path = "test/casestudies/gwt-showcase-js/war/showcase/deferredjs/E65DF306D64E5991248F5198B0C1D7A1/17.cache.js";
  var hash = "93db2c584ef808e6b40c71982493f1c574298734";
  var global = typeof window === 'object' ? window : this;
  var gcv = "__coverage__";
  var coverageData = {
    path: "test/casestudies/gwt-showcase-js/war/showcase/deferredjs/E65DF306D64E5991248F5198B0C1D7A1/17.cache.js",
    statementMap: {},
    fnMap: {},
    branchMap: {},
    s: {},
    f: {},
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "93db2c584ef808e6b40c71982493f1c574298734"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage=_$registerCoverageObject(coverage[path]);
  {
    // @ts-ignore
    cov_uul22xciv = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_uul22xciv();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfdXVsMjJ4Y2l2IiwicGF0aCIsImhhc2giLCJnbG9iYWwiLCJGdW5jdGlvbiIsImdjdiIsImNvdmVyYWdlRGF0YSIsInN0YXRlbWVudE1hcCIsImZuTWFwIiwiYnJhbmNoTWFwIiwicyIsImYiLCJiIiwiX2NvdmVyYWdlU2NoZW1hIiwiY292ZXJhZ2UiLCJhY3R1YWxDb3ZlcmFnZSJdLCJzb3VyY2VzIjpbIjE3LmNhY2hlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwiZnVuY3Rpb24gcXRiKGEpe3ZhciBiO2I9KFdKYigpLGEuaSkucm93cy5sZW5ndGg7VFNiKGEsYiwwLG5ldyBnSmIoKEhkYigpLHhkYikpKTtUU2IoYSxiLDEsbmV3IGdKYih4ZGIpKTtsVGIoTVAoYS5qLDk2KSxiKzEpfVxcbmZ1bmN0aW9uIHJ0Yigpe3ZhciBhLGIsYyxkLGU7ZD1uZXcgJFNiO2M9TVAoZC5qLDk2KTtFaCgoV0piKCksZC5oYiksJ2N3LUZsZXhUYWJsZScsdHJ1ZSk7ZC5oYi5zdHlsZVtQa2NdPSczMmVtJztkLm9bSW9jXT01O2Qub1tKb2NdPTM7Z1RiKGMsMSwoWVRiKCksVVRiKSk7UVNiKGQsMCwwLFxcXCJDZWNpIGVzdCB1biB0YWJsZWF1IGZsZXhpYmxlIHF1aSBwcmVuZCBlbiBjaGFyZ2UgbGVzIDxCPnBsYWdlcyBkZSBjb2xvbm5lPFxcXFwvQj4gZXQgbGVzIDxCPnBsYWdlcyBkZSBsaWduZTxcXFxcL0I+LiBWb3VzIHBvdXZleiBsJ3V0aWxpc2VyIHBvdXIgbWV0dHJlIGVuIGZvcm1lIHZvdHJlIHBhZ2Ugb3UgZW4gdGFudCBxdWUgdGFibGVhdSByXFxcXHhFOXNlcnZcXFxceEU5IFxcXFx4RTAgdW4gYnV0IHByXFxcXHhFOWNpcy5cXFwiKTsoYy5hLlhnKDAsMCksYy5hLmkucm93c1swXS5jZWxsc1swXSlbdHBjXT0yO2E9bmV3IGVOYignQWpvdXRlciB1bmUgbGlnbmUnLG5ldyB2dGIoZCkpO0VoKGEuaGIscHFjLHRydWUpO2U9bmV3IGVOYignU3VwcHJpbWVyIHVuZSBsaWduZScsbmV3IHh0YihkKSk7RWgoZS5oYixwcWMsdHJ1ZSk7Yj1uZXcgZTJiO2IuaGIuY2xhc3NOYW1lPSdjdy1GbGV4VGFibGUtYnV0dG9uUGFuZWwnO2IyYihiLGEpO2IyYihiLGUpO1RTYihkLDAsMSxiKTtpVGIoYywwLDEsKGJVYigpLGFVYikpO3F0YihkKTtxdGIoZCk7TFNiKGQsJ2N3RmxleFRhYmxlJyk7cmV0dXJuIGR9XFxuZnVuY3Rpb24gc3RiKGEpe3ZhciBiO2I9KFdKYigpLGEuaSkucm93cy5sZW5ndGg7aWYoYj4xKXtOU2IoYSxiLTEpO2xUYihNUChhLmosOTYpLGItMSl9fVxcbmZ1bmN0aW9uIHZ0YihhKXt0aGlzLmE9YX1cXG5COSg0NDMsMSwkbWMsdnRiKTtfLldjPWZ1bmN0aW9uIHd0YihhKXtxdGIodGhpcy5hKX07dmFyIEFfPVQ4YihwbmMsJ0N3RmxleFRhYmxlLzEnLDQ0Myk7ZnVuY3Rpb24geHRiKGEpe3RoaXMuYT1hfVxcbkI5KDQ0NCwxLCRtYyx4dGIpO18uV2M9ZnVuY3Rpb24geXRiKGEpe3N0Yih0aGlzLmEpfTt2YXIgQl89VDhiKHBuYywnQ3dGbGV4VGFibGUvMicsNDQ0KTtCOSg0NDUsMSxobmMpO18uRWM9ZnVuY3Rpb24gQnRiKCl7UmJiKHRoaXMuYSxydGIoKSl9O2Z1bmN0aW9uIGxUYihhLGIpeyhhLmEuWGcoMCwxKSxXSmIoKSxhLmEuaS5yb3dzWzBdLmNlbGxzWzFdKVtqcWNdPWJ9XFxuY2tjKEZsKSgxNyk7XFxuLy8jIHNvdXJjZVVSTD1zaG93Y2FzZS0xNy5qc1xcblwiIl0sIm1hcHBpbmdzIjoiQUFBQSx1ekNBQXV6QyxVQUFBQSxjQUFBLE1BQUFDLElBQUEsNkdBQUFDLElBQUEsZ0RBQUFDLE1BQUEsS0FBQUMsUUFBQSxzQkFBQUMsR0FBQSxvQkFBQUMsWUFBQSxFQUFBTCxJQUFBLHlHQUFBTSxZQUFBLElBQUFDLEtBQUEsSUFBQUMsU0FBQSxJQUFBQyxDQUFBLElBQUFDLENBQUEsSUFBQUMsQ0FBQSxJQUFBQyxlQUFBLDRDQUFBWCxJQUFBLGlEQUFBWSxRQUFBLENBQUFYLE1BQUEsQ0FBQUUsR0FBQSxJQUFBRixNQUFBLENBQUFFLEdBQUEsVUFBQVMsUUFBQSxDQUFBYixJQUFBLEdBQUFhLFFBQUEsQ0FBQWIsSUFBQSxFQUFBQyxJQUFBLEdBQUFBLElBQUEsRUFBQVksUUFBQSxDQUFBYixJQUFBLEVBQUFLLFlBQUEsTUFBQVMsY0FBQSxDQUFBRCxRQUFBLENBQUFiLElBQUEsR0FlM3lDO0FBQUFELGFBQUEsU0FBQUEsQ0FBQSxTQUFBZSxjQUFBLFdBQUFBLGNBQUEsRUFBQWYsYUFBQSJ9")