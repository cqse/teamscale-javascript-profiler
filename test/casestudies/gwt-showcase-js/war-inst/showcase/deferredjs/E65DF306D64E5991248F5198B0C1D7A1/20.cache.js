/** $IS_JS_PROFILER_INSTRUMENTED=true **/ (()=>{function d(e){let n=new Blob([e],{type:"text/javascript"}),t=URL.createObjectURL(n),s=new Worker(t);return URL.revokeObjectURL(t),s}function h(){return d('var r=class{constructor(e){this.cachedMessages=[];this.url=e,this.socket=this.createSocket()}createSocket(){let e=new WebSocket(this.url);return e.onopen=()=>this.onopen(),e.onclose=()=>this.onclose(),e}onclose(){this.socket=this.createSocket()}onopen(){console.log("Connection to Coverage Collector established."),this.cachedMessages.forEach(e=>this.socket.send(e)),this.cachedMessages=[]}send(e){this.socket.readyState===WebSocket.OPEN?this.socket.send(e):(this.cachedMessages.push(e),this.cachedMessages.length%500===0&&console.log(`More than ${this.cachedMessages.length} messages are queued to be sent.`))}};var C=20,m=1e3,d=class{constructor(e,t){this.milliseconds=e;this.onCountedToZero=t;this.timerHandle=null}restartCountdown(){this.stopCountdown(),this.timerHandle=self.setTimeout(()=>{this.stopCountdown(),this.onCountedToZero()},this.milliseconds)}stopCountdown(){this.timerHandle!==null&&(self.clearTimeout(this.timerHandle),this.timerHandle=null)}},a=class{constructor(e){this.socket=e,this.cachedCoveredRanges=new Map,this.numberOfCachedPositions=0,this.flushCountdown=new d(m,()=>this.flush())}addRange(e,t){if(!t.start.line||!t.end.line)return;let o=this.cachedCoveredRanges.get(e);o||(o=new Set,this.cachedCoveredRanges.set(e,o)),o.add(t),this.numberOfCachedPositions+=1,this.flushCountdown.restartCountdown(),this.numberOfCachedPositions>=C&&this.flush()}flush(){this.numberOfCachedPositions!==0&&(this.flushCountdown.stopCountdown(),this.cachedCoveredRanges.forEach((e,t)=>{let o=Array.from(e).map(n=>`${n.start.line}:${n.start.column}:${n.end.line}:${n.end.column}`);this.socket.send(`${"c"} ${t} ${o.join(" ")}`),e.clear()}),this.cachedCoveredRanges.clear(),this.numberOfCachedPositions=0)}};console.log("Starting coverage forwarding worker.");var u=new r("ws://localhost:54678/socket"),h=new a(u),f=new Map;onmessage=s=>{if(Array.isArray(s.data))p(s.data);else{let e=s.data;if(e.startsWith("s"))u.send(e);else if(e.startsWith("i")){let t=JSON.parse(e.substring(2));f.set(t.hash,t),console.info(`Received coverage mapping information for "${t.hash}".`)}else e==="unload"?h.flush():console.error(`No handler for message: ${e}`)}};function p(s){var n;let e=s[0],t=s[1],o=f.get(e);if(!o){console.log(`No coverage mapping information for ${e} available!`);return}for(let[c,i]of t.branches.entries()){let l=(n=o.branchMap[c])==null?void 0:n.locations[i];l&&h.addRange(e,l)}for(let c of t.statements){let i=o.statementMap[c];i&&h.addRange(e,i)}}\n')}function c(){return g()}function g(){return window}function p(e,n){let t=c()[e];return t||(t=n,c()[e]=t),t}var l;(function(r){r.MESSAGE_TYPE_SOURCEMAP="s",r.MESSAGE_TYPE_COVERAGE="c",r.ISTANBUL_COV_OBJECT="i",r.UNRESOLVED_CODE_ENTITY="u"})(l||(l={}));function v(e,n){let t=new Map;function s(i){let o=t.get(i);return o||(o={branches:new Map,statements:new Set},t.set(i,o),o)}function r(i,o,w){s(i).branches.set(o,w)}function u(i,o){s(i).statements.add(o)}function a(){n(t),t.clear()}return setInterval(()=>a(),e),{putBranchCoverage:r,putStatementCoverage:u,flush:a}}var C=p("__TS_AGENT",{});function f(){return C._$BcWorker}function S(e){return C._$BcWorker=e,e}var m=v(250,e=>{for(let n of e.entries())f().postMessage(n)});c()._$stmtCov=m.putStatementCoverage;c()._$brCov=m.putBranchCoverage;var b=new Set;c()._$registerCoverageObject=function(e){let n=e.hash;if(b.has(n)){console.log(`Coverage interceptor added twice for ${n}. This seems to be a bug in the instrumentation.`);return}else b.add(n);if(!f()){let t=S(new h);(function(){let r=()=>{m.flush(),t.postMessage("unload")},u=function(i,o){!o||o.addEventListener(i,r,{capture:!0})},a=g();u("blur",a),u("unload",a),u("visibilitychange",a),u("beforeunload",a)})()}(function(){f().postMessage(`${l.ISTANBUL_COV_OBJECT} ${JSON.stringify(e)}`);let s=p("sentMaps",new Set);e.inputSourceMap&&(s.has(e.path)||(f().postMessage(`${l.MESSAGE_TYPE_SOURCEMAP} ${n}:${JSON.stringify(e.inputSourceMap)}`),s.add(e.path)))})()};})();
 $wnd.showcase.runAsyncCallback20("\"function rvb(a){this.a=a}\nB9(453,1,$mc,rvb);_.Wc=function svb(a){var b;b=fh(this.a).value;b.length==0?($wnd.alert('Vous devez s\\xE9lectionner un fichier \\xE0 envoyer'),undefined):($wnd.alert('Fichier t\\xE9l\\xE9charg\\xE9!'),undefined)};var X_=T8b(snc,'CwFileUpload/1',453);B9(454,1,hnc);_.Ec=function vvb(){var a,b,c;Rbb(this.a,(a=new e2b,b2b(a,new QQb('<b>Choisissez un fichier:<\\/b>')),b=new wSb,P1b((WJb(),b.hb),'','cwFileUpload'),b2b(a,b),c=new dNb('Envoyer un fichier'),Lh(c,new rvb(b),(Zt(),Zt(),Yt)),b2b(a,new QQb('<br>')),b2b(a,c),a))};function wSb(){CMb();xSb.call(this,Vo($doc,'file'));(WJb(),this.hb).className='gwt-FileUpload'}\nfunction xSb(a){nh(this,(WJb(),a))}\nB9(322,253,Tkc,wSb);var u3=T8b(Skc,'FileUpload',322);ckc(Fl)(20);\n//# sourceURL=showcase-20.js\n";

const _$fiooecn = "239d6d8901a49108c2231df43a6d320a67041454";
function cov_1w7u1o6nzv() {
  var path = "test/casestudies/gwt-showcase-js/war/showcase/deferredjs/E65DF306D64E5991248F5198B0C1D7A1/20.cache.js";
  var hash = "239d6d8901a49108c2231df43a6d320a67041454";
  var global = typeof window === 'object' ? window : this;
  var gcv = "__coverage__";
  var coverageData = {
    path: "test/casestudies/gwt-showcase-js/war/showcase/deferredjs/E65DF306D64E5991248F5198B0C1D7A1/20.cache.js",
    statementMap: {},
    fnMap: {},
    branchMap: {},
    s: {},
    f: {},
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "239d6d8901a49108c2231df43a6d320a67041454"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage=_$registerCoverageObject(coverage[path]);
  {
    // @ts-ignore
    cov_1w7u1o6nzv = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1w7u1o6nzv();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMXc3dTFvNm56diIsInBhdGgiLCJoYXNoIiwiZ2xvYmFsIiwiRnVuY3Rpb24iLCJnY3YiLCJjb3ZlcmFnZURhdGEiLCJzdGF0ZW1lbnRNYXAiLCJmbk1hcCIsImJyYW5jaE1hcCIsInMiLCJmIiwiYiIsIl9jb3ZlcmFnZVNjaGVtYSIsImNvdmVyYWdlIiwiYWN0dWFsQ292ZXJhZ2UiXSwic291cmNlcyI6WyIyMC5jYWNoZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcImZ1bmN0aW9uIHJ2YihhKXt0aGlzLmE9YX1cXG5COSg0NTMsMSwkbWMscnZiKTtfLldjPWZ1bmN0aW9uIHN2YihhKXt2YXIgYjtiPWZoKHRoaXMuYSkudmFsdWU7Yi5sZW5ndGg9PTA/KCR3bmQuYWxlcnQoJ1ZvdXMgZGV2ZXogc1xcXFx4RTlsZWN0aW9ubmVyIHVuIGZpY2hpZXIgXFxcXHhFMCBlbnZveWVyJyksdW5kZWZpbmVkKTooJHduZC5hbGVydCgnRmljaGllciB0XFxcXHhFOWxcXFxceEU5Y2hhcmdcXFxceEU5IScpLHVuZGVmaW5lZCl9O3ZhciBYXz1UOGIoc25jLCdDd0ZpbGVVcGxvYWQvMScsNDUzKTtCOSg0NTQsMSxobmMpO18uRWM9ZnVuY3Rpb24gdnZiKCl7dmFyIGEsYixjO1JiYih0aGlzLmEsKGE9bmV3IGUyYixiMmIoYSxuZXcgUVFiKCc8Yj5DaG9pc2lzc2V6IHVuIGZpY2hpZXI6PFxcXFwvYj4nKSksYj1uZXcgd1NiLFAxYigoV0piKCksYi5oYiksJycsJ2N3RmlsZVVwbG9hZCcpLGIyYihhLGIpLGM9bmV3IGROYignRW52b3llciB1biBmaWNoaWVyJyksTGgoYyxuZXcgcnZiKGIpLChadCgpLFp0KCksWXQpKSxiMmIoYSxuZXcgUVFiKCc8YnI+JykpLGIyYihhLGMpLGEpKX07ZnVuY3Rpb24gd1NiKCl7Q01iKCk7eFNiLmNhbGwodGhpcyxWbygkZG9jLCdmaWxlJykpOyhXSmIoKSx0aGlzLmhiKS5jbGFzc05hbWU9J2d3dC1GaWxlVXBsb2FkJ31cXG5mdW5jdGlvbiB4U2IoYSl7bmgodGhpcywoV0piKCksYSkpfVxcbkI5KDMyMiwyNTMsVGtjLHdTYik7dmFyIHUzPVQ4YihTa2MsJ0ZpbGVVcGxvYWQnLDMyMik7Y2tjKEZsKSgyMCk7XFxuLy8jIHNvdXJjZVVSTD1zaG93Y2FzZS0yMC5qc1xcblwiIl0sIm1hcHBpbmdzIjoiQUFBQSwrd0JBQSt3QixVQUFBQSxlQUFBLE1BQUFDLElBQUEsNkdBQUFDLElBQUEsZ0RBQUFDLE1BQUEsS0FBQUMsUUFBQSxzQkFBQUMsR0FBQSxvQkFBQUMsWUFBQSxFQUFBTCxJQUFBLHlHQUFBTSxZQUFBLElBQUFDLEtBQUEsSUFBQUMsU0FBQSxJQUFBQyxDQUFBLElBQUFDLENBQUEsSUFBQUMsQ0FBQSxJQUFBQyxlQUFBLDRDQUFBWCxJQUFBLGlEQUFBWSxRQUFBLENBQUFYLE1BQUEsQ0FBQUUsR0FBQSxJQUFBRixNQUFBLENBQUFFLEdBQUEsVUFBQVMsUUFBQSxDQUFBYixJQUFBLEdBQUFhLFFBQUEsQ0FBQWIsSUFBQSxFQUFBQyxJQUFBLEdBQUFBLElBQUEsRUFBQVksUUFBQSxDQUFBYixJQUFBLEVBQUFLLFlBQUEsTUFBQVMsY0FBQSxDQUFBRCxRQUFBLENBQUFiLElBQUEsR0FlbndCO0FBQUFELGNBQUEsU0FBQUEsQ0FBQSxTQUFBZSxjQUFBLFdBQUFBLGNBQUEsRUFBQWYsY0FBQSJ9")