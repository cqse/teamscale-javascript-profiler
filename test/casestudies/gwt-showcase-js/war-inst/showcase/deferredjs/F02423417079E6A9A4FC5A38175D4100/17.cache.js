/** $IS_JS_PROFILER_INSTRUMENTED=true **/ (()=>{function d(e){let n=new Blob([e],{type:"text/javascript"}),t=URL.createObjectURL(n),s=new Worker(t);return URL.revokeObjectURL(t),s}function h(){return d('var r=class{constructor(e){this.cachedMessages=[];this.url=e,this.socket=this.createSocket()}createSocket(){let e=new WebSocket(this.url);return e.onopen=()=>this.onopen(),e.onclose=()=>this.onclose(),e}onclose(){this.socket=this.createSocket()}onopen(){console.log("Connection to Coverage Collector established."),this.cachedMessages.forEach(e=>this.socket.send(e)),this.cachedMessages=[]}send(e){this.socket.readyState===WebSocket.OPEN?this.socket.send(e):(this.cachedMessages.push(e),this.cachedMessages.length%500===0&&console.log(`More than ${this.cachedMessages.length} messages are queued to be sent.`))}};var C=20,m=1e3,d=class{constructor(e,t){this.milliseconds=e;this.onCountedToZero=t;this.timerHandle=null}restartCountdown(){this.stopCountdown(),this.timerHandle=self.setTimeout(()=>{this.stopCountdown(),this.onCountedToZero()},this.milliseconds)}stopCountdown(){this.timerHandle!==null&&(self.clearTimeout(this.timerHandle),this.timerHandle=null)}},a=class{constructor(e){this.socket=e,this.cachedCoveredRanges=new Map,this.numberOfCachedPositions=0,this.flushCountdown=new d(m,()=>this.flush())}addRange(e,t){if(!t.start.line||!t.end.line)return;let o=this.cachedCoveredRanges.get(e);o||(o=new Set,this.cachedCoveredRanges.set(e,o)),o.add(t),this.numberOfCachedPositions+=1,this.flushCountdown.restartCountdown(),this.numberOfCachedPositions>=C&&this.flush()}flush(){this.numberOfCachedPositions!==0&&(this.flushCountdown.stopCountdown(),this.cachedCoveredRanges.forEach((e,t)=>{let o=Array.from(e).map(n=>`${n.start.line}:${n.start.column}:${n.end.line}:${n.end.column}`);this.socket.send(`${"c"} ${t} ${o.join(" ")}`),e.clear()}),this.cachedCoveredRanges.clear(),this.numberOfCachedPositions=0)}};console.log("Starting coverage forwarding worker.");var u=new r("ws://localhost:54678/socket"),h=new a(u),f=new Map;onmessage=s=>{if(Array.isArray(s.data))p(s.data);else{let e=s.data;if(e.startsWith("s"))u.send(e);else if(e.startsWith("i")){let t=JSON.parse(e.substring(2));f.set(t.hash,t),console.info(`Received coverage mapping information for "${t.hash}".`)}else e==="unload"?h.flush():console.error(`No handler for message: ${e}`)}};function p(s){var n;let e=s[0],t=s[1],o=f.get(e);if(!o){console.log(`No coverage mapping information for ${e} available!`);return}for(let[c,i]of t.branches.entries()){let l=(n=o.branchMap[c])==null?void 0:n.locations[i];l&&h.addRange(e,l)}for(let c of t.statements){let i=o.statementMap[c];i&&h.addRange(e,i)}}\n')}function c(){return g()}function g(){return window}function p(e,n){let t=c()[e];return t||(t=n,c()[e]=t),t}var l;(function(r){r.MESSAGE_TYPE_SOURCEMAP="s",r.MESSAGE_TYPE_COVERAGE="c",r.ISTANBUL_COV_OBJECT="i",r.UNRESOLVED_CODE_ENTITY="u"})(l||(l={}));function v(e,n){let t=new Map;function s(i){let o=t.get(i);return o||(o={branches:new Map,statements:new Set},t.set(i,o),o)}function r(i,o,w){s(i).branches.set(o,w)}function u(i,o){s(i).statements.add(o)}function a(){n(t),t.clear()}return setInterval(()=>a(),e),{putBranchCoverage:r,putStatementCoverage:u,flush:a}}var C=p("__TS_AGENT",{});function f(){return C._$BcWorker}function S(e){return C._$BcWorker=e,e}var m=v(250,e=>{for(let n of e.entries())f().postMessage(n)});c()._$stmtCov=m.putStatementCoverage;c()._$brCov=m.putBranchCoverage;var b=new Set;c()._$registerCoverageObject=function(e){let n=e.hash;if(b.has(n)){console.log(`Coverage interceptor added twice for ${n}. This seems to be a bug in the instrumentation.`);return}else b.add(n);if(!f()){let t=S(new h);(function(){let r=()=>{m.flush(),t.postMessage("unload")},u=function(i,o){!o||o.addEventListener(i,r,{capture:!0})},a=g();u("blur",a),u("unload",a),u("visibilitychange",a),u("beforeunload",a)})()}(function(){f().postMessage(`${l.ISTANBUL_COV_OBJECT} ${JSON.stringify(e)}`);let s=p("sentMaps",new Set);e.inputSourceMap&&(s.has(e.path)||(f().postMessage(`${l.MESSAGE_TYPE_SOURCEMAP} ${n}:${JSON.stringify(e.inputSourceMap)}`),s.add(e.path)))})()};})();
 $wnd.showcase.runAsyncCallback17("\"function ktb(a){var b;b=(NJb(),a.i).rows.length;ISb(a,b,0,new ZIb((Bdb(),rdb)));ISb(a,b,1,new ZIb(rdb));aTb(HP(a.j,96),b+1)}\nfunction ltb(){var a,b,c,d,e;d=new PSb;c=HP(d.j,96);Eh((NJb(),d.hb),'cw-FlexTable',true);d.hb.style[Dkc]='32em';d.o[uoc]=5;d.o[voc]=3;XSb(c,1,(OTb(),KTb));FSb(d,0,0,\"Ceci est un tableau flexible qui prend en charge les <B>plages de colonne<\\/B> et les <B>plages de ligne<\\/B>. Vous pouvez l'utiliser pour mettre en forme votre page ou en tant que tableau r\\xE9serv\\xE9 \\xE0 un but pr\\xE9cis.\");(c.a.Xg(0,0),c.a.i.rows[0].cells[0])[fpc]=2;a=new VMb('Ajouter une ligne',new ptb(d));Eh(a.hb,cqc,true);e=new VMb('Supprimer une ligne',new rtb(d));Eh(e.hb,cqc,true);b=new W1b;b.hb.className='cw-FlexTable-buttonPanel';T1b(b,a);T1b(b,e);ISb(d,0,1,b);ZSb(c,0,1,(TTb(),STb));ktb(d);ktb(d);ASb(d,'cwFlexTable');return d}\nfunction mtb(a){var b;b=(NJb(),a.i).rows.length;if(b>1){CSb(a,b-1);aTb(HP(a.j,96),b-1)}}\nfunction ptb(a){this.a=a}\nv9(443,1,Qmc,ptb);_.Wc=function qtb(a){ktb(this.a)};var u_=H8b(fnc,'CwFlexTable/1',443);function rtb(a){this.a=a}\nv9(444,1,Qmc,rtb);_.Wc=function stb(a){mtb(this.a)};var v_=H8b(fnc,'CwFlexTable/2',444);v9(445,1,Zmc);_.Ec=function vtb(){Lbb(this.a,ltb())};function aTb(a,b){(a.a.Xg(0,1),NJb(),a.a.i.rows[0].cells[1])[Ypc]=b}\nSjc(El)(17);\n//# sourceURL=showcase-17.js\n";

const _$fiooedu = "4d2fc59fe63e023cb944d097a92d59da6175df8e";
function cov_14qhvie3o4() {
  var path = "test/casestudies/gwt-showcase-js/war/showcase/deferredjs/F02423417079E6A9A4FC5A38175D4100/17.cache.js";
  var hash = "4d2fc59fe63e023cb944d097a92d59da6175df8e";
  var global = typeof window === 'object' ? window : this;
  var gcv = "__coverage__";
  var coverageData = {
    path: "test/casestudies/gwt-showcase-js/war/showcase/deferredjs/F02423417079E6A9A4FC5A38175D4100/17.cache.js",
    statementMap: {},
    fnMap: {},
    branchMap: {},
    s: {},
    f: {},
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "4d2fc59fe63e023cb944d097a92d59da6175df8e"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage=_$registerCoverageObject(coverage[path]);
  {
    // @ts-ignore
    cov_14qhvie3o4 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_14qhvie3o4();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMTRxaHZpZTNvNCIsInBhdGgiLCJoYXNoIiwiZ2xvYmFsIiwiRnVuY3Rpb24iLCJnY3YiLCJjb3ZlcmFnZURhdGEiLCJzdGF0ZW1lbnRNYXAiLCJmbk1hcCIsImJyYW5jaE1hcCIsInMiLCJmIiwiYiIsIl9jb3ZlcmFnZVNjaGVtYSIsImNvdmVyYWdlIiwiYWN0dWFsQ292ZXJhZ2UiXSwic291cmNlcyI6WyIxNy5jYWNoZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcImZ1bmN0aW9uIGt0YihhKXt2YXIgYjtiPShOSmIoKSxhLmkpLnJvd3MubGVuZ3RoO0lTYihhLGIsMCxuZXcgWkliKChCZGIoKSxyZGIpKSk7SVNiKGEsYiwxLG5ldyBaSWIocmRiKSk7YVRiKEhQKGEuaiw5NiksYisxKX1cXG5mdW5jdGlvbiBsdGIoKXt2YXIgYSxiLGMsZCxlO2Q9bmV3IFBTYjtjPUhQKGQuaiw5Nik7RWgoKE5KYigpLGQuaGIpLCdjdy1GbGV4VGFibGUnLHRydWUpO2QuaGIuc3R5bGVbRGtjXT0nMzJlbSc7ZC5vW3VvY109NTtkLm9bdm9jXT0zO1hTYihjLDEsKE9UYigpLEtUYikpO0ZTYihkLDAsMCxcXFwiQ2VjaSBlc3QgdW4gdGFibGVhdSBmbGV4aWJsZSBxdWkgcHJlbmQgZW4gY2hhcmdlIGxlcyA8Qj5wbGFnZXMgZGUgY29sb25uZTxcXFxcL0I+IGV0IGxlcyA8Qj5wbGFnZXMgZGUgbGlnbmU8XFxcXC9CPi4gVm91cyBwb3V2ZXogbCd1dGlsaXNlciBwb3VyIG1ldHRyZSBlbiBmb3JtZSB2b3RyZSBwYWdlIG91IGVuIHRhbnQgcXVlIHRhYmxlYXUgclxcXFx4RTlzZXJ2XFxcXHhFOSBcXFxceEUwIHVuIGJ1dCBwclxcXFx4RTljaXMuXFxcIik7KGMuYS5YZygwLDApLGMuYS5pLnJvd3NbMF0uY2VsbHNbMF0pW2ZwY109MjthPW5ldyBWTWIoJ0Fqb3V0ZXIgdW5lIGxpZ25lJyxuZXcgcHRiKGQpKTtFaChhLmhiLGNxYyx0cnVlKTtlPW5ldyBWTWIoJ1N1cHByaW1lciB1bmUgbGlnbmUnLG5ldyBydGIoZCkpO0VoKGUuaGIsY3FjLHRydWUpO2I9bmV3IFcxYjtiLmhiLmNsYXNzTmFtZT0nY3ctRmxleFRhYmxlLWJ1dHRvblBhbmVsJztUMWIoYixhKTtUMWIoYixlKTtJU2IoZCwwLDEsYik7WlNiKGMsMCwxLChUVGIoKSxTVGIpKTtrdGIoZCk7a3RiKGQpO0FTYihkLCdjd0ZsZXhUYWJsZScpO3JldHVybiBkfVxcbmZ1bmN0aW9uIG10YihhKXt2YXIgYjtiPShOSmIoKSxhLmkpLnJvd3MubGVuZ3RoO2lmKGI+MSl7Q1NiKGEsYi0xKTthVGIoSFAoYS5qLDk2KSxiLTEpfX1cXG5mdW5jdGlvbiBwdGIoYSl7dGhpcy5hPWF9XFxudjkoNDQzLDEsUW1jLHB0Yik7Xy5XYz1mdW5jdGlvbiBxdGIoYSl7a3RiKHRoaXMuYSl9O3ZhciB1Xz1IOGIoZm5jLCdDd0ZsZXhUYWJsZS8xJyw0NDMpO2Z1bmN0aW9uIHJ0YihhKXt0aGlzLmE9YX1cXG52OSg0NDQsMSxRbWMscnRiKTtfLldjPWZ1bmN0aW9uIHN0YihhKXttdGIodGhpcy5hKX07dmFyIHZfPUg4YihmbmMsJ0N3RmxleFRhYmxlLzInLDQ0NCk7djkoNDQ1LDEsWm1jKTtfLkVjPWZ1bmN0aW9uIHZ0Yigpe0xiYih0aGlzLmEsbHRiKCkpfTtmdW5jdGlvbiBhVGIoYSxiKXsoYS5hLlhnKDAsMSksTkpiKCksYS5hLmkucm93c1swXS5jZWxsc1sxXSlbWXBjXT1ifVxcblNqYyhFbCkoMTcpO1xcbi8vIyBzb3VyY2VVUkw9c2hvd2Nhc2UtMTcuanNcXG5cIiJdLCJtYXBwaW5ncyI6IkFBQUEsdXpDQUF1ekMsVUFBQUEsZUFBQSxNQUFBQyxJQUFBLDZHQUFBQyxJQUFBLGdEQUFBQyxNQUFBLEtBQUFDLFFBQUEsc0JBQUFDLEdBQUEsb0JBQUFDLFlBQUEsRUFBQUwsSUFBQSx5R0FBQU0sWUFBQSxJQUFBQyxLQUFBLElBQUFDLFNBQUEsSUFBQUMsQ0FBQSxJQUFBQyxDQUFBLElBQUFDLENBQUEsSUFBQUMsZUFBQSw0Q0FBQVgsSUFBQSxpREFBQVksUUFBQSxDQUFBWCxNQUFBLENBQUFFLEdBQUEsSUFBQUYsTUFBQSxDQUFBRSxHQUFBLFVBQUFTLFFBQUEsQ0FBQWIsSUFBQSxHQUFBYSxRQUFBLENBQUFiLElBQUEsRUFBQUMsSUFBQSxHQUFBQSxJQUFBLEVBQUFZLFFBQUEsQ0FBQWIsSUFBQSxFQUFBSyxZQUFBLE1BQUFTLGNBQUEsQ0FBQUQsUUFBQSxDQUFBYixJQUFBLEdBZTN5QztBQUFBRCxjQUFBLFNBQUFBLENBQUEsU0FBQWUsY0FBQSxXQUFBQSxjQUFBLEVBQUFmLGNBQUEifQ==")