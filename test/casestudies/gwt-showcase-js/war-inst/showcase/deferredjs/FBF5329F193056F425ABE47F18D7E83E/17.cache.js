/** $IS_JS_PROFILER_INSTRUMENTED=true **/ (()=>{function d(e){let n=new Blob([e],{type:"text/javascript"}),t=URL.createObjectURL(n),s=new Worker(t);return URL.revokeObjectURL(t),s}function h(){return d('var r=class{constructor(e){this.cachedMessages=[];this.url=e,this.socket=this.createSocket()}createSocket(){let e=new WebSocket(this.url);return e.onopen=()=>this.onopen(),e.onclose=()=>this.onclose(),e}onclose(){this.socket=this.createSocket()}onopen(){console.log("Connection to Coverage Collector established."),this.cachedMessages.forEach(e=>this.socket.send(e)),this.cachedMessages=[]}send(e){this.socket.readyState===WebSocket.OPEN?this.socket.send(e):(this.cachedMessages.push(e),this.cachedMessages.length%500===0&&console.log(`More than ${this.cachedMessages.length} messages are queued to be sent.`))}};var C=20,m=1e3,d=class{constructor(e,t){this.milliseconds=e;this.onCountedToZero=t;this.timerHandle=null}restartCountdown(){this.stopCountdown(),this.timerHandle=self.setTimeout(()=>{this.stopCountdown(),this.onCountedToZero()},this.milliseconds)}stopCountdown(){this.timerHandle!==null&&(self.clearTimeout(this.timerHandle),this.timerHandle=null)}},a=class{constructor(e){this.socket=e,this.cachedCoveredRanges=new Map,this.numberOfCachedPositions=0,this.flushCountdown=new d(m,()=>this.flush())}addRange(e,t){if(!t.start.line||!t.end.line)return;let o=this.cachedCoveredRanges.get(e);o||(o=new Set,this.cachedCoveredRanges.set(e,o)),o.add(t),this.numberOfCachedPositions+=1,this.flushCountdown.restartCountdown(),this.numberOfCachedPositions>=C&&this.flush()}flush(){this.numberOfCachedPositions!==0&&(this.flushCountdown.stopCountdown(),this.cachedCoveredRanges.forEach((e,t)=>{let o=Array.from(e).map(n=>`${n.start.line}:${n.start.column}:${n.end.line}:${n.end.column}`);this.socket.send(`${"c"} ${t} ${o.join(" ")}`),e.clear()}),this.cachedCoveredRanges.clear(),this.numberOfCachedPositions=0)}};console.log("Starting coverage forwarding worker.");var u=new r("ws://localhost:54678/socket"),h=new a(u),f=new Map;onmessage=s=>{if(Array.isArray(s.data))p(s.data);else{let e=s.data;if(e.startsWith("s"))u.send(e);else if(e.startsWith("i")){let t=JSON.parse(e.substring(2));f.set(t.hash,t),console.info(`Received coverage mapping information for "${t.hash}".`)}else e==="unload"?h.flush():console.error(`No handler for message: ${e}`)}};function p(s){var n;let e=s[0],t=s[1],o=f.get(e);if(!o){console.log(`No coverage mapping information for ${e} available!`);return}for(let[c,i]of t.branches.entries()){let l=(n=o.branchMap[c])==null?void 0:n.locations[i];l&&h.addRange(e,l)}for(let c of t.statements){let i=o.statementMap[c];i&&h.addRange(e,i)}}\n')}function c(){return g()}function g(){return window}function p(e,n){let t=c()[e];return t||(t=n,c()[e]=t),t}var l;(function(r){r.MESSAGE_TYPE_SOURCEMAP="s",r.MESSAGE_TYPE_COVERAGE="c",r.ISTANBUL_COV_OBJECT="i",r.UNRESOLVED_CODE_ENTITY="u"})(l||(l={}));function v(e,n){let t=new Map;function s(i){let o=t.get(i);return o||(o={branches:new Map,statements:new Set},t.set(i,o),o)}function r(i,o,w){s(i).branches.set(o,w)}function u(i,o){s(i).statements.add(o)}function a(){n(t),t.clear()}return setInterval(()=>a(),e),{putBranchCoverage:r,putStatementCoverage:u,flush:a}}var C=p("__TS_AGENT",{});function f(){return C._$BcWorker}function S(e){return C._$BcWorker=e,e}var m=v(250,e=>{for(let n of e.entries())f().postMessage(n)});c()._$stmtCov=m.putStatementCoverage;c()._$brCov=m.putBranchCoverage;var b=new Set;c()._$registerCoverageObject=function(e){let n=e.hash;if(b.has(n)){console.log(`Coverage interceptor added twice for ${n}. This seems to be a bug in the instrumentation.`);return}else b.add(n);if(!f()){let t=S(new h);(function(){let r=()=>{m.flush(),t.postMessage("unload")},u=function(i,o){!o||o.addEventListener(i,r,{capture:!0})},a=g();u("blur",a),u("unload",a),u("visibilitychange",a),u("beforeunload",a)})()}(function(){f().postMessage(`${l.ISTANBUL_COV_OBJECT} ${JSON.stringify(e)}`);let s=p("sentMaps",new Set);e.inputSourceMap&&(s.has(e.path)||(f().postMessage(`${l.MESSAGE_TYPE_SOURCEMAP} ${n}:${JSON.stringify(e.inputSourceMap)}`),s.add(e.path)))})()};})();
 $wnd.showcase.runAsyncCallback17("\"function hgb(a){var b;b=(Kwb(),a.i).rows.length;FFb(a,b,0,new Wvb((z0(),p0)));FFb(a,b,1,new Wvb(p0));ZFb(ZC(a.j,96),b+1)}\nfunction igb(){var a,b,c,d,e;d=new MFb;c=ZC(d.j,96);Eh((Kwb(),d.hb),'cw-FlexTable',true);d.hb.style[A7b]='32em';d.o[lbc]=5;d.o[mbc]=3;UFb(c,1,(LGb(),HGb));CFb(d,0,0,'\\u8FD9\\u662F\\u4E00\\u4E2A\\u53EF\\u652F\\u6301 <B>colspans<\\/B> \\u548C <B>rowspans<\\/B> \\u7684 FlexTable\\u3002  \\u60A8\\u53EF\\u4EE5\\u7528\\u5B83\\u6765\\u5E03\\u5C40\\u9875\\u9762\\u6216\\u4F5C\\u4E3A\\u5176\\u5B83\\u7279\\u6B8A\\u7528\\u9014\\u7684\\u8868\\u3002');(c.a.Sf(0,0),c.a.i.rows[0].cells[0])[ccc]=2;a=new Szb('\\u6DFB\\u52A0\\u884C',new mgb(d));Eh(a.hb,cdc,true);e=new Szb('\\u5220\\u9664\\u884C',new ogb(d));Eh(e.hb,cdc,true);b=new TQb;b.hb.className='cw-FlexTable-buttonPanel';QQb(b,a);QQb(b,e);FFb(d,0,1,b);WFb(c,0,1,(QGb(),PGb));hgb(d);hgb(d);xFb(d,'cwFlexTable');return d}\nfunction jgb(a){var b;b=(Kwb(),a.i).rows.length;if(b>1){zFb(a,b-1);ZFb(ZC(a.j,96),b-1)}}\nfunction mgb(a){this.a=a}\ntY(433,1,E9b,mgb);_.Wc=function ngb(a){hgb(this.a)};var sO=EXb(X9b,'CwFlexTable/1',433);function ogb(a){this.a=a}\ntY(434,1,E9b,ogb);_.Wc=function pgb(a){jgb(this.a)};var tO=EXb(X9b,'CwFlexTable/2',434);tY(435,1,O9b);_.Ec=function sgb(){J$(this.a,igb())};function ZFb(a,b){(a.a.Sf(0,1),Kwb(),a.a.i.rows[0].cells[1])[Ycc]=b}\nP6b(El)(17);\n//# sourceURL=showcase-17.js\n";

const _$fiooegg = "101974aa495b934ad20bf5f2dec0aee27a40b7ce";
function cov_6am2215zm() {
  var path = "test/casestudies/gwt-showcase-js/war/showcase/deferredjs/FBF5329F193056F425ABE47F18D7E83E/17.cache.js";
  var hash = "101974aa495b934ad20bf5f2dec0aee27a40b7ce";
  var global = typeof window === 'object' ? window : this;
  var gcv = "__coverage__";
  var coverageData = {
    path: "test/casestudies/gwt-showcase-js/war/showcase/deferredjs/FBF5329F193056F425ABE47F18D7E83E/17.cache.js",
    statementMap: {},
    fnMap: {},
    branchMap: {},
    s: {},
    f: {},
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "101974aa495b934ad20bf5f2dec0aee27a40b7ce"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage=_$registerCoverageObject(coverage[path]);
  {
    // @ts-ignore
    cov_6am2215zm = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_6am2215zm();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfNmFtMjIxNXptIiwicGF0aCIsImhhc2giLCJnbG9iYWwiLCJGdW5jdGlvbiIsImdjdiIsImNvdmVyYWdlRGF0YSIsInN0YXRlbWVudE1hcCIsImZuTWFwIiwiYnJhbmNoTWFwIiwicyIsImYiLCJiIiwiX2NvdmVyYWdlU2NoZW1hIiwiY292ZXJhZ2UiLCJhY3R1YWxDb3ZlcmFnZSJdLCJzb3VyY2VzIjpbIjE3LmNhY2hlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwiZnVuY3Rpb24gaGdiKGEpe3ZhciBiO2I9KEt3YigpLGEuaSkucm93cy5sZW5ndGg7RkZiKGEsYiwwLG5ldyBXdmIoKHowKCkscDApKSk7RkZiKGEsYiwxLG5ldyBXdmIocDApKTtaRmIoWkMoYS5qLDk2KSxiKzEpfVxcbmZ1bmN0aW9uIGlnYigpe3ZhciBhLGIsYyxkLGU7ZD1uZXcgTUZiO2M9WkMoZC5qLDk2KTtFaCgoS3diKCksZC5oYiksJ2N3LUZsZXhUYWJsZScsdHJ1ZSk7ZC5oYi5zdHlsZVtBN2JdPSczMmVtJztkLm9bbGJjXT01O2Qub1ttYmNdPTM7VUZiKGMsMSwoTEdiKCksSEdiKSk7Q0ZiKGQsMCwwLCdcXFxcdThGRDlcXFxcdTY2MkZcXFxcdTRFMDBcXFxcdTRFMkFcXFxcdTUzRUZcXFxcdTY1MkZcXFxcdTYzMDEgPEI+Y29sc3BhbnM8XFxcXC9CPiBcXFxcdTU0OEMgPEI+cm93c3BhbnM8XFxcXC9CPiBcXFxcdTc2ODQgRmxleFRhYmxlXFxcXHUzMDAyICBcXFxcdTYwQThcXFxcdTUzRUZcXFxcdTRFRTVcXFxcdTc1MjhcXFxcdTVCODNcXFxcdTY3NjVcXFxcdTVFMDNcXFxcdTVDNDBcXFxcdTk4NzVcXFxcdTk3NjJcXFxcdTYyMTZcXFxcdTRGNUNcXFxcdTRFM0FcXFxcdTUxNzZcXFxcdTVCODNcXFxcdTcyNzlcXFxcdTZCOEFcXFxcdTc1MjhcXFxcdTkwMTRcXFxcdTc2ODRcXFxcdTg4NjhcXFxcdTMwMDInKTsoYy5hLlNmKDAsMCksYy5hLmkucm93c1swXS5jZWxsc1swXSlbY2NjXT0yO2E9bmV3IFN6YignXFxcXHU2REZCXFxcXHU1MkEwXFxcXHU4ODRDJyxuZXcgbWdiKGQpKTtFaChhLmhiLGNkYyx0cnVlKTtlPW5ldyBTemIoJ1xcXFx1NTIyMFxcXFx1OTY2NFxcXFx1ODg0QycsbmV3IG9nYihkKSk7RWgoZS5oYixjZGMsdHJ1ZSk7Yj1uZXcgVFFiO2IuaGIuY2xhc3NOYW1lPSdjdy1GbGV4VGFibGUtYnV0dG9uUGFuZWwnO1FRYihiLGEpO1FRYihiLGUpO0ZGYihkLDAsMSxiKTtXRmIoYywwLDEsKFFHYigpLFBHYikpO2hnYihkKTtoZ2IoZCk7eEZiKGQsJ2N3RmxleFRhYmxlJyk7cmV0dXJuIGR9XFxuZnVuY3Rpb24gamdiKGEpe3ZhciBiO2I9KEt3YigpLGEuaSkucm93cy5sZW5ndGg7aWYoYj4xKXt6RmIoYSxiLTEpO1pGYihaQyhhLmosOTYpLGItMSl9fVxcbmZ1bmN0aW9uIG1nYihhKXt0aGlzLmE9YX1cXG50WSg0MzMsMSxFOWIsbWdiKTtfLldjPWZ1bmN0aW9uIG5nYihhKXtoZ2IodGhpcy5hKX07dmFyIHNPPUVYYihYOWIsJ0N3RmxleFRhYmxlLzEnLDQzMyk7ZnVuY3Rpb24gb2diKGEpe3RoaXMuYT1hfVxcbnRZKDQzNCwxLEU5YixvZ2IpO18uV2M9ZnVuY3Rpb24gcGdiKGEpe2pnYih0aGlzLmEpfTt2YXIgdE89RVhiKFg5YiwnQ3dGbGV4VGFibGUvMicsNDM0KTt0WSg0MzUsMSxPOWIpO18uRWM9ZnVuY3Rpb24gc2diKCl7SiQodGhpcy5hLGlnYigpKX07ZnVuY3Rpb24gWkZiKGEsYil7KGEuYS5TZigwLDEpLEt3YigpLGEuYS5pLnJvd3NbMF0uY2VsbHNbMV0pW1ljY109Yn1cXG5QNmIoRWwpKDE3KTtcXG4vLyMgc291cmNlVVJMPXNob3djYXNlLTE3LmpzXFxuXCIiXSwibWFwcGluZ3MiOiJBQUFBLGsyQ0FBazJDLFVBQUFBLGNBQUEsTUFBQUMsSUFBQSw2R0FBQUMsSUFBQSxnREFBQUMsTUFBQSxLQUFBQyxRQUFBLHNCQUFBQyxHQUFBLG9CQUFBQyxZQUFBLEVBQUFMLElBQUEseUdBQUFNLFlBQUEsSUFBQUMsS0FBQSxJQUFBQyxTQUFBLElBQUFDLENBQUEsSUFBQUMsQ0FBQSxJQUFBQyxDQUFBLElBQUFDLGVBQUEsNENBQUFYLElBQUEsaURBQUFZLFFBQUEsQ0FBQVgsTUFBQSxDQUFBRSxHQUFBLElBQUFGLE1BQUEsQ0FBQUUsR0FBQSxVQUFBUyxRQUFBLENBQUFiLElBQUEsR0FBQWEsUUFBQSxDQUFBYixJQUFBLEVBQUFDLElBQUEsR0FBQUEsSUFBQSxFQUFBWSxRQUFBLENBQUFiLElBQUEsRUFBQUssWUFBQSxNQUFBUyxjQUFBLENBQUFELFFBQUEsQ0FBQWIsSUFBQSxHQWV0MUM7QUFBQUQsYUFBQSxTQUFBQSxDQUFBLFNBQUFlLGNBQUEsV0FBQUEsY0FBQSxFQUFBZixhQUFBIn0=")